// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/external-secrets/external-secrets/apis/externalsecrets/v1alpha1

package v1alpha1

import esmeta "github.com/external-secrets/external-secrets/apis/meta/v1"

// AWSAuth tells the controller how to do authentication with aws.
// Only one of secretRef or jwt can be specified.
// if none is specified the controller will load credentials using the aws sdk defaults.
#AWSAuth: {
	// +optional
	secretRef?: null | #AWSAuthSecretRef @go(SecretRef,*AWSAuthSecretRef)

	// +optional
	jwt?: null | #AWSJWTAuth @go(JWTAuth,*AWSJWTAuth)
}

// AWSAuthSecretRef holds secret references for AWS credentials
// both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
#AWSAuthSecretRef: {
	// The AccessKeyID is used for authentication
	accessKeyIDSecretRef?: esmeta.#SecretKeySelector @go(AccessKeyID)

	// The SecretAccessKey is used for authentication
	secretAccessKeySecretRef?: esmeta.#SecretKeySelector @go(SecretAccessKey)
}

// Authenticate against AWS using service account tokens.
#AWSJWTAuth: {
	serviceAccountRef?: null | esmeta.#ServiceAccountSelector @go(ServiceAccountRef,*esmeta.ServiceAccountSelector)
}

// AWSServiceType is a enum that defines the service/API that is used to fetch the secrets.
// +kubebuilder:validation:Enum=SecretsManager;ParameterStore
#AWSServiceType: string // #enumAWSServiceType

#enumAWSServiceType:
	#AWSServiceSecretsManager |
	#AWSServiceParameterStore

// AWSServiceSecretsManager is the AWS SecretsManager.
// see: https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html
#AWSServiceSecretsManager: #AWSServiceType & "SecretsManager"

// AWSServiceParameterStore is the AWS SystemsManager ParameterStore.
// see: https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html
#AWSServiceParameterStore: #AWSServiceType & "ParameterStore"

// AWSProvider configures a store to sync secrets with AWS.
#AWSProvider: {
	// Service defines which service should be used to fetch the secrets
	service: #AWSServiceType @go(Service)

	// Auth defines the information necessary to authenticate against AWS
	// if not set aws sdk will infer credentials from your environment
	// see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
	// +optional
	auth?: #AWSAuth @go(Auth)

	// Role is a Role ARN which the SecretManager provider will assume
	// +optional
	role?: string @go(Role)

	// AWS Region to be used for the provider
	region: string @go(Region)
}
