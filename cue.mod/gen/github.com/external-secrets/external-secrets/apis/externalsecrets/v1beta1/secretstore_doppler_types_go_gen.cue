// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/external-secrets/external-secrets/apis/externalsecrets/v1beta1

package v1beta1

import esmeta "github.com/external-secrets/external-secrets/apis/meta/v1"

#DopplerAuth: {
	secretRef: #DopplerAuthSecretRef @go(SecretRef)
}

#DopplerAuthSecretRef: {
	// The DopplerToken is used for authentication.
	// See https://docs.doppler.com/reference/api#authentication for auth token types.
	// The Key attribute defaults to dopplerToken if not specified.
	dopplerToken: esmeta.#SecretKeySelector @go(DopplerToken)
}

// DopplerProvider configures a store to sync secrets using the Doppler provider.
// Project and Config are required if not using a Service Token.
#DopplerProvider: {
	// Auth configures how the Operator authenticates with the Doppler API
	auth?: null | #DopplerAuth @go(Auth,*DopplerAuth)

	// Doppler project (required if not using a Service Token)
	// +optional
	project?: string @go(Project)

	// Doppler config (required if not using a Service Token)
	// +optional
	config?: string @go(Config)

	// Environment variable compatible name transforms that change secret names to a different format
	// +kubebuilder:validation:Enum=upper-camel;camel;lower-snake;tf-var;dotnet-env;lower-kebab
	// +optional
	nameTransformer?: string @go(NameTransformer)

	// Format enables the downloading of secrets as a file (string)
	// +kubebuilder:validation:Enum=json;dotnet-json;env;yaml;docker
	// +optional
	format?: string @go(Format)
}
