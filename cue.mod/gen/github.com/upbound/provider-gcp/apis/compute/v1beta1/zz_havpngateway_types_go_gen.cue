// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#HaVPNGatewayInitParameters: {
	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The stack type for this VPN gateway to identify the IP protocols that are enabled.
	// If not specified, IPV4_ONLY will be used.
	// Default value is IPV4_ONLY.
	// Possible values are: IPV4_ONLY, IPV4_IPV6.
	stackType?: null | string @go(StackType,*string)

	// A list of interfaces on this VPN gateway.
	// Structure is documented below.
	vpnInterfaces?: [...#VPNInterfacesInitParameters] @go(VPNInterfaces,[]VPNInterfacesInitParameters)
}

#HaVPNGatewayObservation: {
	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}}/regions/{{region}}/vpnGateways/{{name}}
	id?: null | string @go(ID,*string)

	// The network this VPN gateway is accepting traffic for.
	network?: null | string @go(Network,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The region this gateway should sit in.
	region?: null | string @go(Region,*string)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// The stack type for this VPN gateway to identify the IP protocols that are enabled.
	// If not specified, IPV4_ONLY will be used.
	// Default value is IPV4_ONLY.
	// Possible values are: IPV4_ONLY, IPV4_IPV6.
	stackType?: null | string @go(StackType,*string)

	// A list of interfaces on this VPN gateway.
	// Structure is documented below.
	vpnInterfaces?: [...#VPNInterfacesObservation] @go(VPNInterfaces,[]VPNInterfacesObservation)
}

#HaVPNGatewayParameters: {
	// An optional description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The network this VPN gateway is accepting traffic for.
	// +crossplane:generate:reference:type=Network
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.ExtractResourceID()
	// +kubebuilder:validation:Optional
	network?: null | string @go(Network,*string)

	// Reference to a Network to populate network.
	// +kubebuilder:validation:Optional
	networkRef?: null | v1.#Reference @go(NetworkRef,*v1.Reference)

	// Selector for a Network to populate network.
	// +kubebuilder:validation:Optional
	networkSelector?: null | v1.#Selector @go(NetworkSelector,*v1.Selector)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The region this gateway should sit in.
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// The stack type for this VPN gateway to identify the IP protocols that are enabled.
	// If not specified, IPV4_ONLY will be used.
	// Default value is IPV4_ONLY.
	// Possible values are: IPV4_ONLY, IPV4_IPV6.
	// +kubebuilder:validation:Optional
	stackType?: null | string @go(StackType,*string)

	// A list of interfaces on this VPN gateway.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	vpnInterfaces?: [...#VPNInterfacesParameters] @go(VPNInterfaces,[]VPNInterfacesParameters)
}

#VPNInterfacesInitParameters: {
	// The numeric ID of this VPN gateway interface.
	id?: null | float64 @go(ID,*float64)
}

#VPNInterfacesObservation: {
	// The numeric ID of this VPN gateway interface.
	id?: null | float64 @go(ID,*float64)

	// (Output)
	// The external IP address for this VPN gateway interface.
	ipAddress?: null | string @go(IPAddress,*string)

	// URL of the interconnect attachment resource. When the value
	// of this field is present, the VPN Gateway will be used for
	// IPsec-encrypted Cloud Interconnect; all Egress or Ingress
	// traffic for this VPN Gateway interface will go through the
	// specified interconnect attachment resource.
	// Not currently available publicly.
	interconnectAttachment?: null | string @go(InterconnectAttachment,*string)
}

#VPNInterfacesParameters: {
	// The numeric ID of this VPN gateway interface.
	// +kubebuilder:validation:Optional
	id?: null | float64 @go(ID,*float64)

	// URL of the interconnect attachment resource. When the value
	// of this field is present, the VPN Gateway will be used for
	// IPsec-encrypted Cloud Interconnect; all Egress or Ingress
	// traffic for this VPN Gateway interface will go through the
	// specified interconnect attachment resource.
	// Not currently available publicly.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.InterconnectAttachment
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("self_link",true)
	// +kubebuilder:validation:Optional
	interconnectAttachment?: null | string @go(InterconnectAttachment,*string)

	// Reference to a InterconnectAttachment in compute to populate interconnectAttachment.
	// +kubebuilder:validation:Optional
	interconnectAttachmentRef?: null | v1.#Reference @go(InterconnectAttachmentRef,*v1.Reference)

	// Selector for a InterconnectAttachment in compute to populate interconnectAttachment.
	// +kubebuilder:validation:Optional
	interconnectAttachmentSelector?: null | v1.#Selector @go(InterconnectAttachmentSelector,*v1.Selector)
}

// HaVPNGatewaySpec defines the desired state of HaVPNGateway
#HaVPNGatewaySpec: {
	v1.#ResourceSpec
	forProvider: #HaVPNGatewayParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #HaVPNGatewayInitParameters @go(InitProvider)
}

// HaVPNGatewayStatus defines the observed state of HaVPNGateway.
#HaVPNGatewayStatus: {
	v1.#ResourceStatus
	atProvider?: #HaVPNGatewayObservation @go(AtProvider)
}

// HaVPNGateway is the Schema for the HaVPNGateways API. Represents a VPN gateway running in GCP.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#HaVPNGateway: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta  @go(ObjectMeta)
	spec:      #HaVPNGatewaySpec   @go(Spec)
	status?:   #HaVPNGatewayStatus @go(Status)
}

// HaVPNGatewayList contains a list of HaVPNGateways
#HaVPNGatewayList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#HaVPNGateway] @go(Items,[]HaVPNGateway)
}
