// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#TargetHTTPSProxyInitParameters: {
	// A reference to the CertificateMap resource uri that identifies a certificate map
	// associated with the given target proxy. This field can only be set for global target proxies.
	// Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
	certificateMap?: null | string @go(CertificateMap,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (610 seconds) will be used. For Global
	// external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
	// the maximum allowed value is 1200 seconds. For Global external HTTP(S)
	// load balancer (classic), this option is not available publicly.
	httpKeepAliveTimeoutSec?: null | float64 @go(HTTPKeepAliveTimeoutSec,*float64)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// Specifies the QUIC override policy for this resource. This determines
	// whether the load balancer will attempt to negotiate QUIC with clients
	// or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
	// specified, Google manages whether QUIC is used.
	// Default value is NONE.
	// Possible values are: NONE, ENABLE, DISABLE.
	quicOverride?: null | string @go(QuicOverride,*string)

	// A reference to the SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	sslPolicy?: null | string @go(SSLPolicy,*string)
}

#TargetHTTPSProxyObservation: {
	// A reference to the CertificateMap resource uri that identifies a certificate map
	// associated with the given target proxy. This field can only be set for global target proxies.
	// Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
	certificateMap?: null | string @go(CertificateMap,*string)

	// Creation timestamp in RFC3339 text format.
	creationTimestamp?: null | string @go(CreationTimestamp,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (610 seconds) will be used. For Global
	// external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
	// the maximum allowed value is 1200 seconds. For Global external HTTP(S)
	// load balancer (classic), this option is not available publicly.
	httpKeepAliveTimeoutSec?: null | float64 @go(HTTPKeepAliveTimeoutSec,*float64)

	// an identifier for the resource with format projects/{{project}}/global/targetHttpsProxies/{{name}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// The unique identifier for the resource.
	proxyId?: null | float64 @go(ProxyID,*float64)

	// Specifies the QUIC override policy for this resource. This determines
	// whether the load balancer will attempt to negotiate QUIC with clients
	// or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
	// specified, Google manages whether QUIC is used.
	// Default value is NONE.
	// Possible values are: NONE, ENABLE, DISABLE.
	quicOverride?: null | string @go(QuicOverride,*string)

	// A list of SslCertificate resource URLs or Certificate Manager certificate URLs that are used to authenticate
	// connections between users and the load balancer. At least one resource must be specified.
	sslCertificates?: [...null | string] @go(SSLCertificates,[]*string)

	// A reference to the SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	sslPolicy?: null | string @go(SSLPolicy,*string)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// A reference to the UrlMap resource that defines the mapping from URL
	// to the BackendService.
	urlMap?: null | string @go(URLMap,*string)
}

#TargetHTTPSProxyParameters: {
	// A reference to the CertificateMap resource uri that identifies a certificate map
	// associated with the given target proxy. This field can only be set for global target proxies.
	// Accepted format is //certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}.
	// +kubebuilder:validation:Optional
	certificateMap?: null | string @go(CertificateMap,*string)

	// An optional description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Specifies how long to keep a connection open, after completing a response,
	// while there is no matching traffic (in seconds). If an HTTP keepalive is
	// not specified, a default value (610 seconds) will be used. For Global
	// external HTTP(S) load balancer, the minimum allowed value is 5 seconds and
	// the maximum allowed value is 1200 seconds. For Global external HTTP(S)
	// load balancer (classic), this option is not available publicly.
	// +kubebuilder:validation:Optional
	httpKeepAliveTimeoutSec?: null | float64 @go(HTTPKeepAliveTimeoutSec,*float64)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	// +kubebuilder:validation:Optional
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// Specifies the QUIC override policy for this resource. This determines
	// whether the load balancer will attempt to negotiate QUIC with clients
	// or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is
	// specified, Google manages whether QUIC is used.
	// Default value is NONE.
	// Possible values are: NONE, ENABLE, DISABLE.
	// +kubebuilder:validation:Optional
	quicOverride?: null | string @go(QuicOverride,*string)

	// A list of SslCertificate resource URLs or Certificate Manager certificate URLs that are used to authenticate
	// connections between users and the load balancer. At least one resource must be specified.
	// +crossplane:generate:reference:type=SSLCertificate
	// +kubebuilder:validation:Optional
	sslCertificates?: [...null | string] @go(SSLCertificates,[]*string)

	// References to SSLCertificate to populate sslCertificates.
	// +kubebuilder:validation:Optional
	sslCertificatesRefs?: [...v1.#Reference] @go(SSLCertificatesRefs,[]v1.Reference)

	// Selector for a list of SSLCertificate to populate sslCertificates.
	// +kubebuilder:validation:Optional
	sslCertificatesSelector?: null | v1.#Selector @go(SSLCertificatesSelector,*v1.Selector)

	// A reference to the SslPolicy resource that will be associated with
	// the TargetHttpsProxy resource. If not set, the TargetHttpsProxy
	// resource will not have any SSL policy configured.
	// +kubebuilder:validation:Optional
	sslPolicy?: null | string @go(SSLPolicy,*string)

	// A reference to the UrlMap resource that defines the mapping from URL
	// to the BackendService.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.URLMap
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	urlMap?: null | string @go(URLMap,*string)

	// Reference to a URLMap in compute to populate urlMap.
	// +kubebuilder:validation:Optional
	urlMapRef?: null | v1.#Reference @go(URLMapRef,*v1.Reference)

	// Selector for a URLMap in compute to populate urlMap.
	// +kubebuilder:validation:Optional
	urlMapSelector?: null | v1.#Selector @go(URLMapSelector,*v1.Selector)
}

// TargetHTTPSProxySpec defines the desired state of TargetHTTPSProxy
#TargetHTTPSProxySpec: {
	v1.#ResourceSpec
	forProvider: #TargetHTTPSProxyParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TargetHTTPSProxyInitParameters @go(InitProvider)
}

// TargetHTTPSProxyStatus defines the observed state of TargetHTTPSProxy.
#TargetHTTPSProxyStatus: {
	v1.#ResourceStatus
	atProvider?: #TargetHTTPSProxyObservation @go(AtProvider)
}

// TargetHTTPSProxy is the Schema for the TargetHTTPSProxys API. Represents a TargetHttpsProxy resource, which is used by one or more global forwarding rule to route incoming HTTPS requests to a URL map.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#TargetHTTPSProxy: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta      @go(ObjectMeta)
	spec:      #TargetHTTPSProxySpec   @go(Spec)
	status?:   #TargetHTTPSProxyStatus @go(Status)
}

// TargetHTTPSProxyList contains a list of TargetHTTPSProxys
#TargetHTTPSProxyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TargetHTTPSProxy] @go(Items,[]TargetHTTPSProxy)
}
