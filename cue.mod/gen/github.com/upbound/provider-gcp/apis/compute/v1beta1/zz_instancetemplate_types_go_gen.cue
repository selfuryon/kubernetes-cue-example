// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DiskDiskEncryptionKeyInitParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)
}

#DiskDiskEncryptionKeyObservation: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)
}

#DiskDiskEncryptionKeyParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	// +kubebuilder:validation:Optional
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)
}

#DiskSourceImageEncryptionKeyInitParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#DiskSourceImageEncryptionKeyObservation: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#DiskSourceImageEncryptionKeyParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	// +kubebuilder:validation:Optional
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	// +kubebuilder:validation:Optional
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#DiskSourceSnapshotEncryptionKeyInitParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#DiskSourceSnapshotEncryptionKeyObservation: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#DiskSourceSnapshotEncryptionKeyParameters: {
	// The self link of the encryption key that is
	// stored in Google Cloud KMS.
	// +kubebuilder:validation:Optional
	kmsKeySelfLink?: null | string @go(KMSKeySelfLink,*string)

	// The service account being used for the
	// encryption request for the given KMS key. If absent, the Compute Engine
	// default service account is used.
	// +kubebuilder:validation:Optional
	kmsKeyServiceAccount?: null | string @go(KMSKeyServiceAccount,*string)
}

#InstanceTemplateAdvancedMachineFeaturesInitParameters: {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	enableNestedVirtualization?: null | bool @go(EnableNestedVirtualization,*bool)

	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
	threadsPerCore?: null | float64 @go(ThreadsPerCore,*float64)

	// The number of physical cores to expose to an instance. visible cores info (VC).
	visibleCoreCount?: null | float64 @go(VisibleCoreCount,*float64)
}

#InstanceTemplateAdvancedMachineFeaturesObservation: {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	enableNestedVirtualization?: null | bool @go(EnableNestedVirtualization,*bool)

	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
	threadsPerCore?: null | float64 @go(ThreadsPerCore,*float64)

	// The number of physical cores to expose to an instance. visible cores info (VC).
	visibleCoreCount?: null | float64 @go(VisibleCoreCount,*float64)
}

#InstanceTemplateAdvancedMachineFeaturesParameters: {
	// Defines whether the instance should have nested virtualization enabled. Defaults to false.
	// +kubebuilder:validation:Optional
	enableNestedVirtualization?: null | bool @go(EnableNestedVirtualization,*bool)

	// The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1.
	// +kubebuilder:validation:Optional
	threadsPerCore?: null | float64 @go(ThreadsPerCore,*float64)

	// The number of physical cores to expose to an instance. visible cores info (VC).
	// +kubebuilder:validation:Optional
	visibleCoreCount?: null | float64 @go(VisibleCoreCount,*float64)
}

#InstanceTemplateConfidentialInstanceConfigInitParameters: {
	// Defines whether the instance should have confidential compute enabled. on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
	enableConfidentialCompute?: null | bool @go(EnableConfidentialCompute,*bool)
}

#InstanceTemplateConfidentialInstanceConfigObservation: {
	// Defines whether the instance should have confidential compute enabled. on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
	enableConfidentialCompute?: null | bool @go(EnableConfidentialCompute,*bool)
}

#InstanceTemplateConfidentialInstanceConfigParameters: {
	// Defines whether the instance should have confidential compute enabled. on_host_maintenance has to be set to TERMINATE or this will fail to create the VM.
	// +kubebuilder:validation:Optional
	enableConfidentialCompute?: null | bool @go(EnableConfidentialCompute,*bool)
}

#InstanceTemplateDiskInitParameters: {
	// Whether or not the disk should be auto-deleted.
	// This defaults to true.
	autoDelete?: null | bool @go(AutoDelete,*bool)

	// Indicates that this is a boot disk.
	boot?: null | bool @go(Boot,*bool)

	// A unique device name that is reflected into the
	// /dev/  tree of a Linux operating system running within the instance. If not
	// specified, the server chooses a default device name to apply to this disk.
	deviceName?: null | string @go(DeviceName,*string)

	// Encrypts or decrypts a disk using a customer-supplied encryption key.
	diskEncryptionKey?: [...#DiskDiskEncryptionKeyInitParameters] @go(DiskEncryptionKey,[]DiskDiskEncryptionKeyInitParameters)

	// Name of the disk. When not provided, this defaults
	// to the name of the instance.
	diskName?: null | string @go(DiskName,*string)

	// The size of the image in gigabytes. If not
	// specified, it will inherit the size of its base image. For SCRATCH disks,
	// the size must be exactly 375GB.
	diskSizeGb?: null | float64 @go(DiskSizeGb,*float64)

	// The GCE disk type. Such as "pd-ssd", "local-ssd",
	// "pd-balanced" or "pd-standard".
	diskType?: null | string @go(DiskType,*string)

	// Specifies the disk interface to use for attaching this disk,
	// which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
	// and the request will fail if you attempt to attach a persistent disk in any other format
	// than SCSI. Local SSDs can use either NVME or SCSI.
	interface?: null | string @go(Interface,*string)

	// A set of ket/value label pairs to assign to disk created from
	// this template
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The mode in which to attach this disk, either READ_WRITE
	// or READ_ONLY. If you are attaching or creating a boot disk, this must
	// read-write mode.
	mode?: null | string @go(Mode,*string)

	// - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The image from which to
	// initialize this disk. This can be one of: the image's self_link,
	// projects/{project}/global/images/{image},
	// projects/{project}/global/images/family/{family}, global/images/{image},
	// global/images/family/{family}, family/{family}, {project}/{family},
	// {project}/{image}, {family}, or {image}.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	sourceImage?: null | string @go(SourceImage,*string)

	// The customer-supplied encryption
	// key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	sourceImageEncryptionKey?: [...#DiskSourceImageEncryptionKeyInitParameters] @go(SourceImageEncryptionKey,[]DiskSourceImageEncryptionKeyInitParameters)

	// The source snapshot to create this disk.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	sourceSnapshot?: null | string @go(SourceSnapshot,*string)

	// The customer-supplied encryption
	// key of the source snapshot. Structure
	// documented below.
	sourceSnapshotEncryptionKey?: [...#DiskSourceSnapshotEncryptionKeyInitParameters] @go(SourceSnapshotEncryptionKey,[]DiskSourceSnapshotEncryptionKeyInitParameters)

	// The type of GCE disk, can be either "SCRATCH" or
	// "PERSISTENT".
	type?: null | string @go(Type,*string)
}

#InstanceTemplateDiskObservation: {
	// Whether or not the disk should be auto-deleted.
	// This defaults to true.
	autoDelete?: null | bool @go(AutoDelete,*bool)

	// Indicates that this is a boot disk.
	boot?: null | bool @go(Boot,*bool)

	// A unique device name that is reflected into the
	// /dev/  tree of a Linux operating system running within the instance. If not
	// specified, the server chooses a default device name to apply to this disk.
	deviceName?: null | string @go(DeviceName,*string)

	// Encrypts or decrypts a disk using a customer-supplied encryption key.
	diskEncryptionKey?: [...#DiskDiskEncryptionKeyObservation] @go(DiskEncryptionKey,[]DiskDiskEncryptionKeyObservation)

	// Name of the disk. When not provided, this defaults
	// to the name of the instance.
	diskName?: null | string @go(DiskName,*string)

	// The size of the image in gigabytes. If not
	// specified, it will inherit the size of its base image. For SCRATCH disks,
	// the size must be exactly 375GB.
	diskSizeGb?: null | float64 @go(DiskSizeGb,*float64)

	// The GCE disk type. Such as "pd-ssd", "local-ssd",
	// "pd-balanced" or "pd-standard".
	diskType?: null | string @go(DiskType,*string)

	// Specifies the disk interface to use for attaching this disk,
	// which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
	// and the request will fail if you attempt to attach a persistent disk in any other format
	// than SCSI. Local SSDs can use either NVME or SCSI.
	interface?: null | string @go(Interface,*string)

	// A set of ket/value label pairs to assign to disk created from
	// this template
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The mode in which to attach this disk, either READ_WRITE
	// or READ_ONLY. If you are attaching or creating a boot disk, this must
	// read-write mode.
	mode?: null | string @go(Mode,*string)

	// - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The name (not self_link)
	// of the disk (such as those managed by google_compute_disk) to attach.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	source?: null | string @go(Source,*string)

	// The image from which to
	// initialize this disk. This can be one of: the image's self_link,
	// projects/{project}/global/images/{image},
	// projects/{project}/global/images/family/{family}, global/images/{image},
	// global/images/family/{family}, family/{family}, {project}/{family},
	// {project}/{image}, {family}, or {image}.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	sourceImage?: null | string @go(SourceImage,*string)

	// The customer-supplied encryption
	// key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	sourceImageEncryptionKey?: [...#DiskSourceImageEncryptionKeyObservation] @go(SourceImageEncryptionKey,[]DiskSourceImageEncryptionKeyObservation)

	// The source snapshot to create this disk.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	sourceSnapshot?: null | string @go(SourceSnapshot,*string)

	// The customer-supplied encryption
	// key of the source snapshot. Structure
	// documented below.
	sourceSnapshotEncryptionKey?: [...#DiskSourceSnapshotEncryptionKeyObservation] @go(SourceSnapshotEncryptionKey,[]DiskSourceSnapshotEncryptionKeyObservation)

	// The type of GCE disk, can be either "SCRATCH" or
	// "PERSISTENT".
	type?: null | string @go(Type,*string)
}

#InstanceTemplateDiskParameters: {
	// Whether or not the disk should be auto-deleted.
	// This defaults to true.
	// +kubebuilder:validation:Optional
	autoDelete?: null | bool @go(AutoDelete,*bool)

	// Indicates that this is a boot disk.
	// +kubebuilder:validation:Optional
	boot?: null | bool @go(Boot,*bool)

	// A unique device name that is reflected into the
	// /dev/  tree of a Linux operating system running within the instance. If not
	// specified, the server chooses a default device name to apply to this disk.
	// +kubebuilder:validation:Optional
	deviceName?: null | string @go(DeviceName,*string)

	// Encrypts or decrypts a disk using a customer-supplied encryption key.
	// +kubebuilder:validation:Optional
	diskEncryptionKey?: [...#DiskDiskEncryptionKeyParameters] @go(DiskEncryptionKey,[]DiskDiskEncryptionKeyParameters)

	// Name of the disk. When not provided, this defaults
	// to the name of the instance.
	// +kubebuilder:validation:Optional
	diskName?: null | string @go(DiskName,*string)

	// The size of the image in gigabytes. If not
	// specified, it will inherit the size of its base image. For SCRATCH disks,
	// the size must be exactly 375GB.
	// +kubebuilder:validation:Optional
	diskSizeGb?: null | float64 @go(DiskSizeGb,*float64)

	// The GCE disk type. Such as "pd-ssd", "local-ssd",
	// "pd-balanced" or "pd-standard".
	// +kubebuilder:validation:Optional
	diskType?: null | string @go(DiskType,*string)

	// Specifies the disk interface to use for attaching this disk,
	// which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
	// and the request will fail if you attempt to attach a persistent disk in any other format
	// than SCSI. Local SSDs can use either NVME or SCSI.
	// +kubebuilder:validation:Optional
	interface?: null | string @go(Interface,*string)

	// A set of ket/value label pairs to assign to disk created from
	// this template
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The mode in which to attach this disk, either READ_WRITE
	// or READ_ONLY. If you are attaching or creating a boot disk, this must
	// read-write mode.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// - A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
	// +kubebuilder:validation:Optional
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The name (not self_link)
	// of the disk (such as those managed by google_compute_disk) to attach.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.Disk
	// +kubebuilder:validation:Optional
	source?: null | string @go(Source,*string)

	// The image from which to
	// initialize this disk. This can be one of: the image's self_link,
	// projects/{project}/global/images/{image},
	// projects/{project}/global/images/family/{family}, global/images/{image},
	// global/images/family/{family}, family/{family}, {project}/{family},
	// {project}/{image}, {family}, or {image}.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	// +kubebuilder:validation:Optional
	sourceImage?: null | string @go(SourceImage,*string)

	// The customer-supplied encryption
	// key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	// +kubebuilder:validation:Optional
	sourceImageEncryptionKey?: [...#DiskSourceImageEncryptionKeyParameters] @go(SourceImageEncryptionKey,[]DiskSourceImageEncryptionKeyParameters)

	// Reference to a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	sourceRef?: null | v1.#Reference @go(SourceRef,*v1.Reference)

	// Selector for a Disk in compute to populate source.
	// +kubebuilder:validation:Optional
	sourceSelector?: null | v1.#Selector @go(SourceSelector,*v1.Selector)

	// The source snapshot to create this disk.
	// ~> Note: Either source, source_image, or source_snapshot is required in a disk block unless the disk type is local-ssd. Check the API docs for details.
	// +kubebuilder:validation:Optional
	sourceSnapshot?: null | string @go(SourceSnapshot,*string)

	// The customer-supplied encryption
	// key of the source snapshot. Structure
	// documented below.
	// +kubebuilder:validation:Optional
	sourceSnapshotEncryptionKey?: [...#DiskSourceSnapshotEncryptionKeyParameters] @go(SourceSnapshotEncryptionKey,[]DiskSourceSnapshotEncryptionKeyParameters)

	// The type of GCE disk, can be either "SCRATCH" or
	// "PERSISTENT".
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#InstanceTemplateGuestAcceleratorInitParameters: {
	// The number of the guest accelerator cards exposed to this instance.
	count?: null | float64 @go(Count,*float64)

	// The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
	type?: null | string @go(Type,*string)
}

#InstanceTemplateGuestAcceleratorObservation: {
	// The number of the guest accelerator cards exposed to this instance.
	count?: null | float64 @go(Count,*float64)

	// The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
	type?: null | string @go(Type,*string)
}

#InstanceTemplateGuestAcceleratorParameters: {
	// The number of the guest accelerator cards exposed to this instance.
	// +kubebuilder:validation:Optional
	count?: null | float64 @go(Count,*float64)

	// The accelerator type resource to expose to this instance. E.g. nvidia-tesla-k80.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#InstanceTemplateInitParameters: {
	// Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below
	advancedMachineFeatures?: [...#InstanceTemplateAdvancedMachineFeaturesInitParameters] @go(AdvancedMachineFeatures,[]InstanceTemplateAdvancedMachineFeaturesInitParameters)

	// Whether to allow sending and receiving of
	// packets with non-matching source or destination IPs. This defaults to false.
	canIpForward?: null | bool @go(CanIPForward,*bool)

	// Enable Confidential Mode on this VM. Structure is documented below
	confidentialInstanceConfig?: [...#InstanceTemplateConfidentialInstanceConfigInitParameters] @go(ConfidentialInstanceConfig,[]InstanceTemplateConfidentialInstanceConfigInitParameters)

	// A brief description of this resource.
	description?: null | string @go(Description,*string)

	// Disks to attach to instances created from this template.
	// This can be specified multiple times for multiple disks. Structure is
	// documented below.
	disk?: [...#InstanceTemplateDiskInitParameters] @go(Disk,[]InstanceTemplateDiskInitParameters)

	// List of the type and count of accelerator cards attached to the instance. Structure documented below.
	guestAccelerator?: [...#InstanceTemplateGuestAcceleratorInitParameters] @go(GuestAccelerator,[]InstanceTemplateGuestAcceleratorInitParameters)

	// A brief description to use for instances
	// created from this template.
	instanceDescription?: null | string @go(InstanceDescription,*string)

	// A set of key/value label pairs to assign to instances
	// created from this template.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The machine type to create.
	machineType?: null | string @go(MachineType,*string)

	// Metadata key/value pairs to make available from
	// within instances created from this template.
	metadata?: {[string]: string} @go(Metadata,map[string]string)

	// An alternative to using the
	// startup-script metadata key, mostly to match the compute_instance resource.
	// This replaces the startup-script metadata key on the created instance and
	// thus the two mechanisms are not allowed to be used simultaneously.
	metadataStartupScript?: null | string @go(MetadataStartupScript,*string)

	// Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
	// Intel Haswell or Intel Skylake. See the complete list here.
	minCpuPlatform?: null | string @go(MinCPUPlatform,*string)

	// The name of the instance template.
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the specified
	// prefix. Conflicts with name.
	namePrefix?: null | string @go(NamePrefix,*string)

	// Networks to attach to instances created from
	// this template. This can be specified multiple times for multiple networks.
	// Structure is documented below.
	networkInterface?: [...#InstanceTemplateNetworkInterfaceInitParameters] @go(NetworkInterface,[]InstanceTemplateNetworkInterfaceInitParameters)

	// os-features, and network_interface.0.nic-type must be GVNIC
	// in order for this setting to take effect.
	networkPerformanceConfig?: [...#InstanceTemplateNetworkPerformanceConfigInitParameters] @go(NetworkPerformanceConfig,[]InstanceTemplateNetworkPerformanceConfigInitParameters)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// An instance template is a global resource that is not
	// bound to a zone or a region. However, you can still specify some regional
	// resources in an instance template, which restricts the template to the
	// region where that resource resides. For example, a custom subnetwork
	// resource is tied to a specific region. Defaults to the region of the
	// Provider if no value is given.
	region?: null | string @go(Region,*string)

	// Specifies the reservations that this instance can consume from.
	// Structure is documented below.
	reservationAffinity?: [...#InstanceTemplateReservationAffinityInitParameters] @go(ReservationAffinity,[]InstanceTemplateReservationAffinityInitParameters)

	// - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The scheduling strategy to use. More details about
	// this configuration option are detailed below.
	scheduling?: [...#InstanceTemplateSchedulingInitParameters] @go(Scheduling,[]InstanceTemplateSchedulingInitParameters)

	// Service account to attach to the instance. Structure is documented below.
	serviceAccount?: [...#InstanceTemplateServiceAccountInitParameters] @go(ServiceAccount,[]InstanceTemplateServiceAccountInitParameters)

	// Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
	// Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
	shieldedInstanceConfig?: [...#InstanceTemplateShieldedInstanceConfigInitParameters] @go(ShieldedInstanceConfig,[]InstanceTemplateShieldedInstanceConfigInitParameters)

	// Tags to attach to the instance.
	tags?: [...null | string] @go(Tags,[]*string)
}

#InstanceTemplateNetworkInterfaceAccessConfigInitParameters: {
	// The IP address that will be 1:1 mapped to the instance's
	// network ip. If not given, one will be generated.
	natIp?: null | string @go(NATIP,*string)

	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	networkTier?: null | string @go(NetworkTier,*string)
}

#InstanceTemplateNetworkInterfaceAccessConfigObservation: {
	// The IP address that will be 1:1 mapped to the instance's
	// network ip. If not given, one will be generated.
	natIp?: null | string @go(NATIP,*string)

	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	networkTier?: null | string @go(NetworkTier,*string)

	// The name of the instance template.
	publicPtrDomainName?: null | string @go(PublicPtrDomainName,*string)
}

#InstanceTemplateNetworkInterfaceAccessConfigParameters: {
	// The IP address that will be 1:1 mapped to the instance's
	// network ip. If not given, one will be generated.
	// +kubebuilder:validation:Optional
	natIp?: null | string @go(NATIP,*string)

	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	// +kubebuilder:validation:Optional
	networkTier?: null | string @go(NetworkTier,*string)
}

#InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters: {
	// The IP CIDR range represented by this alias IP range. This IP CIDR range
	// must belong to the specified subnetwork and cannot contain IP addresses reserved by
	// system or used by other network interfaces. At the time of writing only a
	// netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
	// error.
	ipCidrRange?: null | string @go(IPCidrRange,*string)

	// The subnetwork secondary range name specifying
	// the secondary range from which to allocate the IP CIDR range for this alias IP
	// range. If left unspecified, the primary range of the subnetwork will be used.
	subnetworkRangeName?: null | string @go(SubnetworkRangeName,*string)
}

#InstanceTemplateNetworkInterfaceAliasIPRangeObservation: {
	// The IP CIDR range represented by this alias IP range. This IP CIDR range
	// must belong to the specified subnetwork and cannot contain IP addresses reserved by
	// system or used by other network interfaces. At the time of writing only a
	// netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
	// error.
	ipCidrRange?: null | string @go(IPCidrRange,*string)

	// The subnetwork secondary range name specifying
	// the secondary range from which to allocate the IP CIDR range for this alias IP
	// range. If left unspecified, the primary range of the subnetwork will be used.
	subnetworkRangeName?: null | string @go(SubnetworkRangeName,*string)
}

#InstanceTemplateNetworkInterfaceAliasIPRangeParameters: {
	// The IP CIDR range represented by this alias IP range. This IP CIDR range
	// must belong to the specified subnetwork and cannot contain IP addresses reserved by
	// system or used by other network interfaces. At the time of writing only a
	// netmask (e.g. /24) may be supplied, with a CIDR format resulting in an API
	// error.
	// +kubebuilder:validation:Optional
	ipCidrRange?: null | string @go(IPCidrRange,*string)

	// The subnetwork secondary range name specifying
	// the secondary range from which to allocate the IP CIDR range for this alias IP
	// range. If left unspecified, the primary range of the subnetwork will be used.
	// +kubebuilder:validation:Optional
	subnetworkRangeName?: null | string @go(SubnetworkRangeName,*string)
}

#InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters: {
	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	networkTier?: null | string @go(NetworkTier,*string)
}

#InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation: {
	externalIpv6?:             null | string @go(ExternalIPv6,*string)
	externalIpv6PrefixLength?: null | string @go(ExternalIPv6PrefixLength,*string)

	// The name of the instance template.
	name?: null | string @go(Name,*string)

	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	networkTier?: null | string @go(NetworkTier,*string)

	// The name of the instance template.
	publicPtrDomainName?: null | string @go(PublicPtrDomainName,*string)
}

#InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters: {
	// The service-level to be provided for IPv6 traffic when the
	// subnet has an external subnet. Only PREMIUM and STANDARD tier is valid for IPv6.
	// +kubebuilder:validation:Optional
	networkTier?: null | string @go(NetworkTier,*string)
}

#InstanceTemplateNetworkInterfaceInitParameters: {
	// Access configurations, i.e. IPs via which this
	// instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
	// on that network). This block can be repeated multiple times. Structure documented below.
	accessConfig?: [...#InstanceTemplateNetworkInterfaceAccessConfigInitParameters] @go(AccessConfig,[]InstanceTemplateNetworkInterfaceAccessConfigInitParameters)

	// An
	// array of alias IP ranges for this network interface. Can only be specified for network
	// interfaces on subnet-mode networks. Structure documented below.
	aliasIpRange?: [...#InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters] @go(AliasIPRange,[]InstanceTemplateNetworkInterfaceAliasIPRangeInitParameters)

	// An array of IPv6 access configurations for this interface.
	// Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
	// specified, then this instance will have no external IPv6 Internet access. Structure documented below.
	ipv6AccessConfig?: [...#InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters] @go(IPv6AccessConfig,[]InstanceTemplateNetworkInterfaceIPv6AccessConfigInitParameters)

	// The private IP address to assign to the instance. If
	// empty, the address will be automatically assigned.
	networkIp?: null | string @go(NetworkIP,*string)

	// The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
	nicType?: null | string @go(NicType,*string)

	// The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
	queueCount?: null | float64 @go(QueueCount,*float64)

	// The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
	stackType?: null | string @go(StackType,*string)

	// The ID of the project in which the subnetwork belongs.
	// If it is not provided, the provider project is used.
	subnetworkProject?: null | string @go(SubnetworkProject,*string)
}

#InstanceTemplateNetworkInterfaceObservation: {
	// Access configurations, i.e. IPs via which this
	// instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
	// on that network). This block can be repeated multiple times. Structure documented below.
	accessConfig?: [...#InstanceTemplateNetworkInterfaceAccessConfigObservation] @go(AccessConfig,[]InstanceTemplateNetworkInterfaceAccessConfigObservation)

	// An
	// array of alias IP ranges for this network interface. Can only be specified for network
	// interfaces on subnet-mode networks. Structure documented below.
	aliasIpRange?: [...#InstanceTemplateNetworkInterfaceAliasIPRangeObservation] @go(AliasIPRange,[]InstanceTemplateNetworkInterfaceAliasIPRangeObservation)

	// An array of IPv6 access configurations for this interface.
	// Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
	// specified, then this instance will have no external IPv6 Internet access. Structure documented below.
	ipv6AccessConfig?: [...#InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation] @go(IPv6AccessConfig,[]InstanceTemplateNetworkInterfaceIPv6AccessConfigObservation)
	ipv6AccessType?: null | string @go(IPv6AccessType,*string)

	// The name of the instance template.
	name?: null | string @go(Name,*string)

	// The name or self_link of the network to attach this interface to.
	// Use network attribute for Legacy or Auto subnetted networks and
	// subnetwork for custom subnetted networks.
	network?: null | string @go(Network,*string)

	// The private IP address to assign to the instance. If
	// empty, the address will be automatically assigned.
	networkIp?: null | string @go(NetworkIP,*string)

	// The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
	nicType?: null | string @go(NicType,*string)

	// The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
	queueCount?: null | float64 @go(QueueCount,*float64)

	// The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
	stackType?: null | string @go(StackType,*string)

	// the name of the subnetwork to attach this interface
	// to. The subnetwork must exist in the same region this instance will be
	// created in. Either network or subnetwork must be provided.
	subnetwork?: null | string @go(Subnetwork,*string)

	// The ID of the project in which the subnetwork belongs.
	// If it is not provided, the provider project is used.
	subnetworkProject?: null | string @go(SubnetworkProject,*string)
}

#InstanceTemplateNetworkInterfaceParameters: {
	// Access configurations, i.e. IPs via which this
	// instance can be accessed via the Internet.g. via tunnel or because it is running on another cloud instance
	// on that network). This block can be repeated multiple times. Structure documented below.
	// +kubebuilder:validation:Optional
	accessConfig?: [...#InstanceTemplateNetworkInterfaceAccessConfigParameters] @go(AccessConfig,[]InstanceTemplateNetworkInterfaceAccessConfigParameters)

	// An
	// array of alias IP ranges for this network interface. Can only be specified for network
	// interfaces on subnet-mode networks. Structure documented below.
	// +kubebuilder:validation:Optional
	aliasIpRange?: [...#InstanceTemplateNetworkInterfaceAliasIPRangeParameters] @go(AliasIPRange,[]InstanceTemplateNetworkInterfaceAliasIPRangeParameters)

	// An array of IPv6 access configurations for this interface.
	// Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig
	// specified, then this instance will have no external IPv6 Internet access. Structure documented below.
	// +kubebuilder:validation:Optional
	ipv6AccessConfig?: [...#InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters] @go(IPv6AccessConfig,[]InstanceTemplateNetworkInterfaceIPv6AccessConfigParameters)

	// The name or self_link of the network to attach this interface to.
	// Use network attribute for Legacy or Auto subnetted networks and
	// subnetwork for custom subnetted networks.
	// +crossplane:generate:reference:type=Network
	// +kubebuilder:validation:Optional
	network?: null | string @go(Network,*string)

	// The private IP address to assign to the instance. If
	// empty, the address will be automatically assigned.
	// +kubebuilder:validation:Optional
	networkIp?: null | string @go(NetworkIP,*string)

	// Reference to a Network to populate network.
	// +kubebuilder:validation:Optional
	networkRef?: null | v1.#Reference @go(NetworkRef,*v1.Reference)

	// Selector for a Network to populate network.
	// +kubebuilder:validation:Optional
	networkSelector?: null | v1.#Selector @go(NetworkSelector,*v1.Selector)

	// The type of vNIC to be used on this interface. Possible values: GVNIC, VIRTIO_NET.
	// +kubebuilder:validation:Optional
	nicType?: null | string @go(NicType,*string)

	// The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.
	// +kubebuilder:validation:Optional
	queueCount?: null | float64 @go(QueueCount,*float64)

	// The stack type for this network interface to identify whether the IPv6 feature is enabled or not. Values are IPV4_IPV6 or IPV4_ONLY. If not specified, IPV4_ONLY will be used.
	// +kubebuilder:validation:Optional
	stackType?: null | string @go(StackType,*string)

	// the name of the subnetwork to attach this interface
	// to. The subnetwork must exist in the same region this instance will be
	// created in. Either network or subnetwork must be provided.
	// +crossplane:generate:reference:type=Subnetwork
	// +kubebuilder:validation:Optional
	subnetwork?: null | string @go(Subnetwork,*string)

	// The ID of the project in which the subnetwork belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	subnetworkProject?: null | string @go(SubnetworkProject,*string)

	// Reference to a Subnetwork to populate subnetwork.
	// +kubebuilder:validation:Optional
	subnetworkRef?: null | v1.#Reference @go(SubnetworkRef,*v1.Reference)

	// Selector for a Subnetwork to populate subnetwork.
	// +kubebuilder:validation:Optional
	subnetworkSelector?: null | v1.#Selector @go(SubnetworkSelector,*v1.Selector)
}

#InstanceTemplateNetworkPerformanceConfigInitParameters: {
	// The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
	totalEgressBandwidthTier?: null | string @go(TotalEgressBandwidthTier,*string)
}

#InstanceTemplateNetworkPerformanceConfigObservation: {
	// The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
	totalEgressBandwidthTier?: null | string @go(TotalEgressBandwidthTier,*string)
}

#InstanceTemplateNetworkPerformanceConfigParameters: {
	// The egress bandwidth tier to enable. Possible values: TIER_1, DEFAULT
	// +kubebuilder:validation:Optional
	totalEgressBandwidthTier?: null | string @go(TotalEgressBandwidthTier,*string)
}

#InstanceTemplateObservation: {
	// Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below
	advancedMachineFeatures?: [...#InstanceTemplateAdvancedMachineFeaturesObservation] @go(AdvancedMachineFeatures,[]InstanceTemplateAdvancedMachineFeaturesObservation)

	// Whether to allow sending and receiving of
	// packets with non-matching source or destination IPs. This defaults to false.
	canIpForward?: null | bool @go(CanIPForward,*bool)

	// Enable Confidential Mode on this VM. Structure is documented below
	confidentialInstanceConfig?: [...#InstanceTemplateConfidentialInstanceConfigObservation] @go(ConfidentialInstanceConfig,[]InstanceTemplateConfidentialInstanceConfigObservation)

	// A brief description of this resource.
	description?: null | string @go(Description,*string)

	// Disks to attach to instances created from this template.
	// This can be specified multiple times for multiple disks. Structure is
	// documented below.
	disk?: [...#InstanceTemplateDiskObservation] @go(Disk,[]InstanceTemplateDiskObservation)

	// List of the type and count of accelerator cards attached to the instance. Structure documented below.
	guestAccelerator?: [...#InstanceTemplateGuestAcceleratorObservation] @go(GuestAccelerator,[]InstanceTemplateGuestAcceleratorObservation)

	// an identifier for the resource with format projects/{{project}}/global/instanceTemplates/{{name}}
	id?: null | string @go(ID,*string)

	// A brief description to use for instances
	// created from this template.
	instanceDescription?: null | string @go(InstanceDescription,*string)

	// A set of key/value label pairs to assign to instances
	// created from this template.
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The machine type to create.
	machineType?: null | string @go(MachineType,*string)

	// Metadata key/value pairs to make available from
	// within instances created from this template.
	metadata?: {[string]: string} @go(Metadata,map[string]string)

	// The unique fingerprint of the metadata.
	metadataFingerprint?: null | string @go(MetadataFingerprint,*string)

	// An alternative to using the
	// startup-script metadata key, mostly to match the compute_instance resource.
	// This replaces the startup-script metadata key on the created instance and
	// thus the two mechanisms are not allowed to be used simultaneously.
	metadataStartupScript?: null | string @go(MetadataStartupScript,*string)

	// Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
	// Intel Haswell or Intel Skylake. See the complete list here.
	minCpuPlatform?: null | string @go(MinCPUPlatform,*string)

	// The name of the instance template.
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the specified
	// prefix. Conflicts with name.
	namePrefix?: null | string @go(NamePrefix,*string)

	// Networks to attach to instances created from
	// this template. This can be specified multiple times for multiple networks.
	// Structure is documented below.
	networkInterface?: [...#InstanceTemplateNetworkInterfaceObservation] @go(NetworkInterface,[]InstanceTemplateNetworkInterfaceObservation)

	// os-features, and network_interface.0.nic-type must be GVNIC
	// in order for this setting to take effect.
	networkPerformanceConfig?: [...#InstanceTemplateNetworkPerformanceConfigObservation] @go(NetworkPerformanceConfig,[]InstanceTemplateNetworkPerformanceConfigObservation)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// An instance template is a global resource that is not
	// bound to a zone or a region. However, you can still specify some regional
	// resources in an instance template, which restricts the template to the
	// region where that resource resides. For example, a custom subnetwork
	// resource is tied to a specific region. Defaults to the region of the
	// Provider if no value is given.
	region?: null | string @go(Region,*string)

	// Specifies the reservations that this instance can consume from.
	// Structure is documented below.
	reservationAffinity?: [...#InstanceTemplateReservationAffinityObservation] @go(ReservationAffinity,[]InstanceTemplateReservationAffinityObservation)

	// - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The scheduling strategy to use. More details about
	// this configuration option are detailed below.
	scheduling?: [...#InstanceTemplateSchedulingObservation] @go(Scheduling,[]InstanceTemplateSchedulingObservation)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// A special URI of the created resource that uniquely identifies this instance template with the following format: projects/{{project}}/global/instanceTemplates/{{name}}?uniqueId={{uniqueId}}
	// Referencing an instance template via this attribute prevents Time of Check to Time of Use attacks when the instance template resides in a shared/untrusted environment.
	selfLinkUnique?: null | string @go(SelfLinkUnique,*string)

	// Service account to attach to the instance. Structure is documented below.
	serviceAccount?: [...#InstanceTemplateServiceAccountObservation] @go(ServiceAccount,[]InstanceTemplateServiceAccountObservation)

	// Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
	// Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
	shieldedInstanceConfig?: [...#InstanceTemplateShieldedInstanceConfigObservation] @go(ShieldedInstanceConfig,[]InstanceTemplateShieldedInstanceConfigObservation)

	// Tags to attach to the instance.
	tags?: [...null | string] @go(Tags,[]*string)

	// The unique fingerprint of the tags.
	tagsFingerprint?: null | string @go(TagsFingerprint,*string)
}

#InstanceTemplateParameters: {
	// Configure Nested Virtualisation and Simultaneous Hyper Threading on this VM. Structure is documented below
	// +kubebuilder:validation:Optional
	advancedMachineFeatures?: [...#InstanceTemplateAdvancedMachineFeaturesParameters] @go(AdvancedMachineFeatures,[]InstanceTemplateAdvancedMachineFeaturesParameters)

	// Whether to allow sending and receiving of
	// packets with non-matching source or destination IPs. This defaults to false.
	// +kubebuilder:validation:Optional
	canIpForward?: null | bool @go(CanIPForward,*bool)

	// Enable Confidential Mode on this VM. Structure is documented below
	// +kubebuilder:validation:Optional
	confidentialInstanceConfig?: [...#InstanceTemplateConfidentialInstanceConfigParameters] @go(ConfidentialInstanceConfig,[]InstanceTemplateConfidentialInstanceConfigParameters)

	// A brief description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Disks to attach to instances created from this template.
	// This can be specified multiple times for multiple disks. Structure is
	// documented below.
	// +kubebuilder:validation:Optional
	disk?: [...#InstanceTemplateDiskParameters] @go(Disk,[]InstanceTemplateDiskParameters)

	// List of the type and count of accelerator cards attached to the instance. Structure documented below.
	// +kubebuilder:validation:Optional
	guestAccelerator?: [...#InstanceTemplateGuestAcceleratorParameters] @go(GuestAccelerator,[]InstanceTemplateGuestAcceleratorParameters)

	// A brief description to use for instances
	// created from this template.
	// +kubebuilder:validation:Optional
	instanceDescription?: null | string @go(InstanceDescription,*string)

	// A set of key/value label pairs to assign to instances
	// created from this template.
	// +kubebuilder:validation:Optional
	labels?: {[string]: null | string} @go(Labels,map[string]*string)

	// The machine type to create.
	// +kubebuilder:validation:Optional
	machineType?: null | string @go(MachineType,*string)

	// Metadata key/value pairs to make available from
	// within instances created from this template.
	// +kubebuilder:validation:Optional
	metadata?: {[string]: string} @go(Metadata,map[string]string)

	// An alternative to using the
	// startup-script metadata key, mostly to match the compute_instance resource.
	// This replaces the startup-script metadata key on the created instance and
	// thus the two mechanisms are not allowed to be used simultaneously.
	// +kubebuilder:validation:Optional
	metadataStartupScript?: null | string @go(MetadataStartupScript,*string)

	// Specifies a minimum CPU platform. Applicable values are the friendly names of CPU platforms, such as
	// Intel Haswell or Intel Skylake. See the complete list here.
	// +kubebuilder:validation:Optional
	minCpuPlatform?: null | string @go(MinCPUPlatform,*string)

	// The name of the instance template.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// Creates a unique name beginning with the specified
	// prefix. Conflicts with name.
	// +kubebuilder:validation:Optional
	namePrefix?: null | string @go(NamePrefix,*string)

	// Networks to attach to instances created from
	// this template. This can be specified multiple times for multiple networks.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	networkInterface?: [...#InstanceTemplateNetworkInterfaceParameters] @go(NetworkInterface,[]InstanceTemplateNetworkInterfaceParameters)

	// os-features, and network_interface.0.nic-type must be GVNIC
	// in order for this setting to take effect.
	// +kubebuilder:validation:Optional
	networkPerformanceConfig?: [...#InstanceTemplateNetworkPerformanceConfigParameters] @go(NetworkPerformanceConfig,[]InstanceTemplateNetworkPerformanceConfigParameters)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// An instance template is a global resource that is not
	// bound to a zone or a region. However, you can still specify some regional
	// resources in an instance template, which restricts the template to the
	// region where that resource resides. For example, a custom subnetwork
	// resource is tied to a specific region. Defaults to the region of the
	// Provider if no value is given.
	// +kubebuilder:validation:Optional
	region?: null | string @go(Region,*string)

	// Specifies the reservations that this instance can consume from.
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	reservationAffinity?: [...#InstanceTemplateReservationAffinityParameters] @go(ReservationAffinity,[]InstanceTemplateReservationAffinityParameters)

	// - A list of self_links of resource policies to attach to the instance. Modifying this list will cause the instance to recreate. Currently a max of 1 resource policy is supported.
	// +kubebuilder:validation:Optional
	resourcePolicies?: [...null | string] @go(ResourcePolicies,[]*string)

	// The scheduling strategy to use. More details about
	// this configuration option are detailed below.
	// +kubebuilder:validation:Optional
	scheduling?: [...#InstanceTemplateSchedulingParameters] @go(Scheduling,[]InstanceTemplateSchedulingParameters)

	// Service account to attach to the instance. Structure is documented below.
	// +kubebuilder:validation:Optional
	serviceAccount?: [...#InstanceTemplateServiceAccountParameters] @go(ServiceAccount,[]InstanceTemplateServiceAccountParameters)

	// Enable Shielded VM on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
	// Note: shielded_instance_config can only be used with boot images with shielded vm support. See the complete list here.
	// +kubebuilder:validation:Optional
	shieldedInstanceConfig?: [...#InstanceTemplateShieldedInstanceConfigParameters] @go(ShieldedInstanceConfig,[]InstanceTemplateShieldedInstanceConfigParameters)

	// Tags to attach to the instance.
	// +kubebuilder:validation:Optional
	tags?: [...null | string] @go(Tags,[]*string)
}

#InstanceTemplateReservationAffinityInitParameters: {
	// Specifies the label selector for the reservation to use..
	// Structure is documented below.
	specificReservation?: [...#InstanceTemplateReservationAffinitySpecificReservationInitParameters] @go(SpecificReservation,[]InstanceTemplateReservationAffinitySpecificReservationInitParameters)

	// The type of reservation from which this instance can consume resources.
	type?: null | string @go(Type,*string)
}

#InstanceTemplateReservationAffinityObservation: {
	// Specifies the label selector for the reservation to use..
	// Structure is documented below.
	specificReservation?: [...#InstanceTemplateReservationAffinitySpecificReservationObservation] @go(SpecificReservation,[]InstanceTemplateReservationAffinitySpecificReservationObservation)

	// The type of reservation from which this instance can consume resources.
	type?: null | string @go(Type,*string)
}

#InstanceTemplateReservationAffinityParameters: {
	// Specifies the label selector for the reservation to use..
	// Structure is documented below.
	// +kubebuilder:validation:Optional
	specificReservation?: [...#InstanceTemplateReservationAffinitySpecificReservationParameters] @go(SpecificReservation,[]InstanceTemplateReservationAffinitySpecificReservationParameters)

	// The type of reservation from which this instance can consume resources.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)
}

#InstanceTemplateReservationAffinitySpecificReservationInitParameters: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	key?: null | string @go(Key,*string)

	// Corresponds to the label values of a reservation resource.
	values?: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateReservationAffinitySpecificReservationObservation: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	key?: null | string @go(Key,*string)

	// Corresponds to the label values of a reservation resource.
	values?: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateReservationAffinitySpecificReservationParameters: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Corresponds to the label values of a reservation resource.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateSchedulingInitParameters: {
	// Specifies whether the instance should be
	// automatically restarted if it is terminated by Compute Engine (not
	// terminated by a user). This defaults to true.
	automaticRestart?: null | bool @go(AutomaticRestart,*bool)

	// Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
	instanceTerminationAction?: null | string @go(InstanceTerminationAction,*string)

	// io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
	// The local_ssd_recovery_timeout block supports:
	localSsdRecoveryTimeout?: [...#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters] @go(LocalSsdRecoveryTimeout,[]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters)
	minNodeCpus?: null | float64 @go(MinNodeCpus,*float64)

	// Specifies node affinities or anti-affinities
	// to determine which sole-tenant nodes your instances and managed instance
	// groups will use as host systems. Read more on sole-tenant node creation
	// here.
	// Structure documented below.
	nodeAffinities?: [...#InstanceTemplateSchedulingNodeAffinitiesInitParameters] @go(NodeAffinities,[]InstanceTemplateSchedulingNodeAffinitiesInitParameters)

	// Defines the maintenance behavior for this
	// instance.
	onHostMaintenance?: null | string @go(OnHostMaintenance,*string)

	// Allows instance to be preempted. This defaults to
	// false. Read more on this
	// here.
	preemptible?: null | bool @go(Preemptible,*bool)

	// Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
	// preemptible should be true and auto_restart should be
	// false. For more info about
	// SPOT, read here
	provisioningModel?: null | string @go(ProvisioningModel,*string)
}

#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutInitParameters: {
	// Span of time that's a fraction of a second at nanosecond
	// resolution. Durations less than one second are represented with a 0
	// seconds field and a positive nanos field. Must be from 0 to
	// 999,999,999 inclusive.
	nanos?: null | float64 @go(Nanos,*float64)

	// Span of time at a resolution of a second. Must be from 0 to
	// 315,576,000,000 inclusive. Note: these bounds are computed from: 60
	// sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
	seconds?: null | float64 @go(Seconds,*float64)
}

#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation: {
	// Span of time that's a fraction of a second at nanosecond
	// resolution. Durations less than one second are represented with a 0
	// seconds field and a positive nanos field. Must be from 0 to
	// 999,999,999 inclusive.
	nanos?: null | float64 @go(Nanos,*float64)

	// Span of time at a resolution of a second. Must be from 0 to
	// 315,576,000,000 inclusive. Note: these bounds are computed from: 60
	// sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
	seconds?: null | float64 @go(Seconds,*float64)
}

#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters: {
	// Span of time that's a fraction of a second at nanosecond
	// resolution. Durations less than one second are represented with a 0
	// seconds field and a positive nanos field. Must be from 0 to
	// 999,999,999 inclusive.
	// +kubebuilder:validation:Optional
	nanos?: null | float64 @go(Nanos,*float64)

	// Span of time at a resolution of a second. Must be from 0 to
	// 315,576,000,000 inclusive. Note: these bounds are computed from: 60
	// sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years.
	// +kubebuilder:validation:Optional
	seconds?: null | float64 @go(Seconds,*float64)
}

#InstanceTemplateSchedulingNodeAffinitiesInitParameters: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	key?: null | string @go(Key,*string)

	// The operator. Can be IN for node-affinities
	// or NOT_IN for anti-affinities.
	operator?: null | string @go(Operator,*string)

	// Corresponds to the label values of a reservation resource.
	values?: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateSchedulingNodeAffinitiesObservation: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	key?: null | string @go(Key,*string)

	// The operator. Can be IN for node-affinities
	// or NOT_IN for anti-affinities.
	operator?: null | string @go(Operator,*string)

	// Corresponds to the label values of a reservation resource.
	values?: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateSchedulingNodeAffinitiesParameters: {
	// Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// The operator. Can be IN for node-affinities
	// or NOT_IN for anti-affinities.
	// +kubebuilder:validation:Optional
	operator?: null | string @go(Operator,*string)

	// Corresponds to the label values of a reservation resource.
	// +kubebuilder:validation:Optional
	values: [...null | string] @go(Values,[]*string)
}

#InstanceTemplateSchedulingObservation: {
	// Specifies whether the instance should be
	// automatically restarted if it is terminated by Compute Engine (not
	// terminated by a user). This defaults to true.
	automaticRestart?: null | bool @go(AutomaticRestart,*bool)

	// Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
	instanceTerminationAction?: null | string @go(InstanceTerminationAction,*string)

	// io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
	// The local_ssd_recovery_timeout block supports:
	localSsdRecoveryTimeout?: [...#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation] @go(LocalSsdRecoveryTimeout,[]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutObservation)
	minNodeCpus?: null | float64 @go(MinNodeCpus,*float64)

	// Specifies node affinities or anti-affinities
	// to determine which sole-tenant nodes your instances and managed instance
	// groups will use as host systems. Read more on sole-tenant node creation
	// here.
	// Structure documented below.
	nodeAffinities?: [...#InstanceTemplateSchedulingNodeAffinitiesObservation] @go(NodeAffinities,[]InstanceTemplateSchedulingNodeAffinitiesObservation)

	// Defines the maintenance behavior for this
	// instance.
	onHostMaintenance?: null | string @go(OnHostMaintenance,*string)

	// Allows instance to be preempted. This defaults to
	// false. Read more on this
	// here.
	preemptible?: null | bool @go(Preemptible,*bool)

	// Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
	// preemptible should be true and auto_restart should be
	// false. For more info about
	// SPOT, read here
	provisioningModel?: null | string @go(ProvisioningModel,*string)
}

#InstanceTemplateSchedulingParameters: {
	// Specifies whether the instance should be
	// automatically restarted if it is terminated by Compute Engine (not
	// terminated by a user). This defaults to true.
	// +kubebuilder:validation:Optional
	automaticRestart?: null | bool @go(AutomaticRestart,*bool)

	// Describe the type of termination action for SPOT VM. Can be STOP or DELETE.  Read more on here
	// +kubebuilder:validation:Optional
	instanceTerminationAction?: null | string @go(InstanceTerminationAction,*string)

	// io/docs/providers/google/guides/provider_versions.html) Specifies the maximum amount of time a Local Ssd Vm should wait while recovery of the Local Ssd state is attempted. Its value should be in between 0 and 168 hours with hour granularity and the default value being 1 hour. Structure is documented below.
	// The local_ssd_recovery_timeout block supports:
	// +kubebuilder:validation:Optional
	localSsdRecoveryTimeout?: [...#InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters] @go(LocalSsdRecoveryTimeout,[]InstanceTemplateSchedulingLocalSsdRecoveryTimeoutParameters)

	// +kubebuilder:validation:Optional
	minNodeCpus?: null | float64 @go(MinNodeCpus,*float64)

	// Specifies node affinities or anti-affinities
	// to determine which sole-tenant nodes your instances and managed instance
	// groups will use as host systems. Read more on sole-tenant node creation
	// here.
	// Structure documented below.
	// +kubebuilder:validation:Optional
	nodeAffinities?: [...#InstanceTemplateSchedulingNodeAffinitiesParameters] @go(NodeAffinities,[]InstanceTemplateSchedulingNodeAffinitiesParameters)

	// Defines the maintenance behavior for this
	// instance.
	// +kubebuilder:validation:Optional
	onHostMaintenance?: null | string @go(OnHostMaintenance,*string)

	// Allows instance to be preempted. This defaults to
	// false. Read more on this
	// here.
	// +kubebuilder:validation:Optional
	preemptible?: null | bool @go(Preemptible,*bool)

	// Describe the type of preemptible VM. This field accepts the value STANDARD or SPOT. If the value is STANDARD, there will be no discount. If this   is set to SPOT,
	// preemptible should be true and auto_restart should be
	// false. For more info about
	// SPOT, read here
	// +kubebuilder:validation:Optional
	provisioningModel?: null | string @go(ProvisioningModel,*string)
}

#InstanceTemplateServiceAccountInitParameters: {
	// A list of service scopes. Both OAuth2 URLs and gcloud
	// short names are supported. To allow full access to all Cloud APIs, use the
	// cloud-platform scope. See a complete list of scopes here.
	scopes?: [...null | string] @go(Scopes,[]*string)
}

#InstanceTemplateServiceAccountObservation: {
	// The service account e-mail address. If not given, the
	// default Google Compute Engine service account is used.
	email?: null | string @go(Email,*string)

	// A list of service scopes. Both OAuth2 URLs and gcloud
	// short names are supported. To allow full access to all Cloud APIs, use the
	// cloud-platform scope. See a complete list of scopes here.
	scopes?: [...null | string] @go(Scopes,[]*string)
}

#InstanceTemplateServiceAccountParameters: {
	// The service account e-mail address. If not given, the
	// default Google Compute Engine service account is used.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/cloudplatform/v1beta1.ServiceAccount
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("email",true)
	// +kubebuilder:validation:Optional
	email?: null | string @go(Email,*string)

	// Reference to a ServiceAccount in cloudplatform to populate email.
	// +kubebuilder:validation:Optional
	emailRef?: null | v1.#Reference @go(EmailRef,*v1.Reference)

	// Selector for a ServiceAccount in cloudplatform to populate email.
	// +kubebuilder:validation:Optional
	emailSelector?: null | v1.#Selector @go(EmailSelector,*v1.Selector)

	// A list of service scopes. Both OAuth2 URLs and gcloud
	// short names are supported. To allow full access to all Cloud APIs, use the
	// cloud-platform scope. See a complete list of scopes here.
	// +kubebuilder:validation:Optional
	scopes: [...null | string] @go(Scopes,[]*string)
}

#InstanceTemplateShieldedInstanceConfigInitParameters: {
	// - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
	enableIntegrityMonitoring?: null | bool @go(EnableIntegrityMonitoring,*bool)

	// - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
	enableSecureBoot?: null | bool @go(EnableSecureBoot,*bool)

	// - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
	enableVtpm?: null | bool @go(EnableVtpm,*bool)
}

#InstanceTemplateShieldedInstanceConfigObservation: {
	// - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
	enableIntegrityMonitoring?: null | bool @go(EnableIntegrityMonitoring,*bool)

	// - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
	enableSecureBoot?: null | bool @go(EnableSecureBoot,*bool)

	// - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
	enableVtpm?: null | bool @go(EnableVtpm,*bool)
}

#InstanceTemplateShieldedInstanceConfigParameters: {
	// - Compare the most recent boot measurements to the integrity policy baseline and return a pair of pass/fail results depending on whether they match or not. Defaults to true.
	// +kubebuilder:validation:Optional
	enableIntegrityMonitoring?: null | bool @go(EnableIntegrityMonitoring,*bool)

	// - Verify the digital signature of all boot components, and halt the boot process if signature verification fails. Defaults to false.
	// +kubebuilder:validation:Optional
	enableSecureBoot?: null | bool @go(EnableSecureBoot,*bool)

	// - Use a virtualized trusted platform module, which is a specialized computer chip you can use to encrypt objects like keys and certificates. Defaults to true.
	// +kubebuilder:validation:Optional
	enableVtpm?: null | bool @go(EnableVtpm,*bool)
}

// InstanceTemplateSpec defines the desired state of InstanceTemplate
#InstanceTemplateSpec: {
	v1.#ResourceSpec
	forProvider: #InstanceTemplateParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #InstanceTemplateInitParameters @go(InitProvider)
}

// InstanceTemplateStatus defines the observed state of InstanceTemplate.
#InstanceTemplateStatus: {
	v1.#ResourceStatus
	atProvider?: #InstanceTemplateObservation @go(AtProvider)
}

// InstanceTemplate is the Schema for the InstanceTemplates API. Manages a VM instance template resource within GCE.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#InstanceTemplate: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.disk) || (has(self.initProvider) && has(self.initProvider.disk))",message="spec.forProvider.disk is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.machineType) || (has(self.initProvider) && has(self.initProvider.machineType))",message="spec.forProvider.machineType is a required parameter"
	spec:    #InstanceTemplateSpec   @go(Spec)
	status?: #InstanceTemplateStatus @go(Status)
}

// InstanceTemplateList contains a list of InstanceTemplates
#InstanceTemplateList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#InstanceTemplate] @go(Items,[]InstanceTemplate)
}
