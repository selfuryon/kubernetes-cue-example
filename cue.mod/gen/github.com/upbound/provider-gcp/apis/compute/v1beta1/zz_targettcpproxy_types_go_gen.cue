// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#TargetTCPProxyInitParameters: {
	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is NONE.
	// Possible values are: NONE, PROXY_V1.
	proxyHeader?: null | string @go(ProxyHeader,*string)
}

#TargetTCPProxyObservation: {
	// A reference to the BackendService resource.
	backendService?: null | string @go(BackendService,*string)

	// Creation timestamp in RFC3339 text format.
	creationTimestamp?: null | string @go(CreationTimestamp,*string)

	// An optional description of this resource.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}}/global/targetTcpProxies/{{name}}
	id?: null | string @go(ID,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is NONE.
	// Possible values are: NONE, PROXY_V1.
	proxyHeader?: null | string @go(ProxyHeader,*string)

	// The unique identifier for the resource.
	proxyId?: null | float64 @go(ProxyID,*float64)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)
}

#TargetTCPProxyParameters: {
	// A reference to the BackendService resource.
	// +crossplane:generate:reference:type=github.com/upbound/provider-gcp/apis/compute/v1beta1.BackendService
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	backendService?: null | string @go(BackendService,*string)

	// Reference to a BackendService in compute to populate backendService.
	// +kubebuilder:validation:Optional
	backendServiceRef?: null | v1.#Reference @go(BackendServiceRef,*v1.Reference)

	// Selector for a BackendService in compute to populate backendService.
	// +kubebuilder:validation:Optional
	backendServiceSelector?: null | v1.#Selector @go(BackendServiceSelector,*v1.Selector)

	// An optional description of this resource.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The ID of the project in which the resource belongs.
	// If it is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// This field only applies when the forwarding rule that references
	// this target proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED.
	// +kubebuilder:validation:Optional
	proxyBind?: null | bool @go(ProxyBind,*bool)

	// Specifies the type of proxy header to append before sending data to
	// the backend.
	// Default value is NONE.
	// Possible values are: NONE, PROXY_V1.
	// +kubebuilder:validation:Optional
	proxyHeader?: null | string @go(ProxyHeader,*string)
}

// TargetTCPProxySpec defines the desired state of TargetTCPProxy
#TargetTCPProxySpec: {
	v1.#ResourceSpec
	forProvider: #TargetTCPProxyParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #TargetTCPProxyInitParameters @go(InitProvider)
}

// TargetTCPProxyStatus defines the observed state of TargetTCPProxy.
#TargetTCPProxyStatus: {
	v1.#ResourceStatus
	atProvider?: #TargetTCPProxyObservation @go(AtProvider)
}

// TargetTCPProxy is the Schema for the TargetTCPProxys API. Represents a TargetTcpProxy resource, which is used by one or more global forwarding rule to route incoming TCP requests to a Backend service.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#TargetTCPProxy: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta    @go(ObjectMeta)
	spec:      #TargetTCPProxySpec   @go(Spec)
	status?:   #TargetTCPProxyStatus @go(Status)
}

// TargetTCPProxyList contains a list of TargetTCPProxys
#TargetTCPProxyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#TargetTCPProxy] @go(Items,[]TargetTCPProxy)
}
