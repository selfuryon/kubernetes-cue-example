// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-gcp/apis/compute/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#InstanceGroupInitParameters: {
	// An optional textual description of the instance
	// group.
	description?: null | string @go(Description,*string)

	// The list of instances in the group, in self_link format.
	// When adding instances they must all be in the same network and zone as the instance group.
	instances?: [...null | string] @go(Instances,[]*string)

	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	namedPort?: [...#NamedPortInitParameters] @go(NamedPort,[]NamedPortInitParameters)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)
}

#InstanceGroupObservation: {
	// An optional textual description of the instance
	// group.
	description?: null | string @go(Description,*string)

	// an identifier for the resource with format projects/{{project}/zones/{{zone}}/instanceGroups/{{name}}
	id?: null | string @go(ID,*string)

	// The list of instances in the group, in self_link format.
	// When adding instances they must all be in the same network and zone as the instance group.
	instances?: [...null | string] @go(Instances,[]*string)

	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	namedPort?: [...#NamedPortObservation] @go(NamedPort,[]NamedPortObservation)

	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// network nor instances is specified, this field will be blank).
	network?: null | string @go(Network,*string)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	project?: null | string @go(Project,*string)

	// The URI of the created resource.
	selfLink?: null | string @go(SelfLink,*string)

	// The number of instances in the group.
	size?: null | float64 @go(Size,*float64)

	// The zone that this instance group should be created in.
	zone?: null | string @go(Zone,*string)
}

#InstanceGroupParameters: {
	// An optional textual description of the instance
	// group.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// The list of instances in the group, in self_link format.
	// When adding instances they must all be in the same network and zone as the instance group.
	// +kubebuilder:validation:Optional
	instances?: [...null | string] @go(Instances,[]*string)

	// The named port configuration. See the section below
	// for details on configuration. Structure is documented below.
	// +kubebuilder:validation:Optional
	namedPort?: [...#NamedPortParameters] @go(NamedPort,[]NamedPortParameters)

	// The URL of the network the instance group is in. If
	// this is different from the network where the instances are in, the creation
	// fails. Defaults to the network where the instances are in (if neither
	// network nor instances is specified, this field will be blank).
	// +crossplane:generate:reference:type=Network
	// +crossplane:generate:reference:extractor=github.com/upbound/provider-gcp/config/common.SelfLinkExtractor()
	// +kubebuilder:validation:Optional
	network?: null | string @go(Network,*string)

	// Reference to a Network to populate network.
	// +kubebuilder:validation:Optional
	networkRef?: null | v1.#Reference @go(NetworkRef,*v1.Reference)

	// Selector for a Network to populate network.
	// +kubebuilder:validation:Optional
	networkSelector?: null | v1.#Selector @go(NetworkSelector,*v1.Selector)

	// The ID of the project in which the resource belongs. If it
	// is not provided, the provider project is used.
	// +kubebuilder:validation:Optional
	project?: null | string @go(Project,*string)

	// The zone that this instance group should be created in.
	// +kubebuilder:validation:Required
	zone?: null | string @go(Zone,*string)
}

#NamedPortInitParameters: {
	// The name which the port will be mapped to.
	name?: null | string @go(Name,*string)

	// The port number to map the name to.
	port?: null | float64 @go(Port,*float64)
}

#NamedPortObservation: {
	// The name which the port will be mapped to.
	name?: null | string @go(Name,*string)

	// The port number to map the name to.
	port?: null | float64 @go(Port,*float64)
}

#NamedPortParameters: {
	// The name which the port will be mapped to.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The port number to map the name to.
	// +kubebuilder:validation:Optional
	port?: null | float64 @go(Port,*float64)
}

// InstanceGroupSpec defines the desired state of InstanceGroup
#InstanceGroupSpec: {
	v1.#ResourceSpec
	forProvider: #InstanceGroupParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #InstanceGroupInitParameters @go(InitProvider)
}

// InstanceGroupStatus defines the observed state of InstanceGroup.
#InstanceGroupStatus: {
	v1.#ResourceStatus
	atProvider?: #InstanceGroupObservation @go(AtProvider)
}

// InstanceGroup is the Schema for the InstanceGroups API. Manages an Instance Group within GCE.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,gcp}
#InstanceGroup: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta   @go(ObjectMeta)
	spec:      #InstanceGroupSpec   @go(Spec)
	status?:   #InstanceGroupStatus @go(Status)
}

// InstanceGroupList contains a list of InstanceGroups
#InstanceGroupList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#InstanceGroup] @go(Items,[]InstanceGroup)
}
