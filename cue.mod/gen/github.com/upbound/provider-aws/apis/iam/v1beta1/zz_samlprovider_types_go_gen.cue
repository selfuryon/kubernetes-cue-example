// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iam/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#SAMLProviderInitParameters: {
	// An XML document generated by an identity provider that supports SAML 2.0.
	samlMetadataDocument?: null | string @go(SAMLMetadataDocument,*string)

	// Key-value map of resource tags.
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#SAMLProviderObservation: {
	// The ARN assigned by AWS for this provider.
	arn?: null | string @go(Arn,*string)
	id?:  null | string @go(ID,*string)

	// An XML document generated by an identity provider that supports SAML 2.0.
	samlMetadataDocument?: null | string @go(SAMLMetadataDocument,*string)

	// Key-value map of resource tags.
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The expiration date and time for the SAML provider in RFC1123 format, e.g., Mon, 02 Jan 2006 15:04:05 MST.
	validUntil?: null | string @go(ValidUntil,*string)
}

#SAMLProviderParameters: {
	// An XML document generated by an identity provider that supports SAML 2.0.
	// +kubebuilder:validation:Optional
	samlMetadataDocument?: null | string @go(SAMLMetadataDocument,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// SAMLProviderSpec defines the desired state of SAMLProvider
#SAMLProviderSpec: {
	v1.#ResourceSpec
	forProvider: #SAMLProviderParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SAMLProviderInitParameters @go(InitProvider)
}

// SAMLProviderStatus defines the observed state of SAMLProvider.
#SAMLProviderStatus: {
	v1.#ResourceStatus
	atProvider?: #SAMLProviderObservation @go(AtProvider)
}

// SAMLProvider is the Schema for the SAMLProviders API. Provides an IAM SAML provider.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#SAMLProvider: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.samlMetadataDocument) || (has(self.initProvider) && has(self.initProvider.samlMetadataDocument))",message="spec.forProvider.samlMetadataDocument is a required parameter"
	spec:    #SAMLProviderSpec   @go(Spec)
	status?: #SAMLProviderStatus @go(Status)
}

// SAMLProviderList contains a list of SAMLProviders
#SAMLProviderList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SAMLProvider] @go(Items,[]SAMLProvider)
}
