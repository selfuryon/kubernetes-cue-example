// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/iam/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ServiceLinkedRoleInitParameters: {
	// The AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com. To find the full list of services that support service-linked roles, check the docs.
	awsServiceName?: null | string @go(AwsServiceName,*string)

	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	customSuffix?: null | string @go(CustomSuffix,*string)

	// The description of the role.
	description?: null | string @go(Description,*string)

	// Key-value map of resource tags.
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

#ServiceLinkedRoleObservation: {
	// The Amazon Resource Name (ARN) specifying the role.
	arn?: null | string @go(Arn,*string)

	// The AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com. To find the full list of services that support service-linked roles, check the docs.
	awsServiceName?: null | string @go(AwsServiceName,*string)

	// The creation date of the IAM role.
	createDate?: null | string @go(CreateDate,*string)

	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	customSuffix?: null | string @go(CustomSuffix,*string)

	// The description of the role.
	description?: null | string @go(Description,*string)

	// The Amazon Resource Name (ARN) of the role.
	id?: null | string @go(ID,*string)

	// The name of the role.
	name?: null | string @go(Name,*string)

	// The path of the role.
	path?: null | string @go(Path,*string)

	// Key-value map of resource tags.
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)

	// A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	// +mapType=granular
	tagsAll?: {[string]: null | string} @go(TagsAll,map[string]*string)

	// The stable and unique string identifying the role.
	uniqueId?: null | string @go(UniqueID,*string)
}

#ServiceLinkedRoleParameters: {
	// The AWS service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: elasticbeanstalk.amazonaws.com. To find the full list of services that support service-linked roles, check the docs.
	// +kubebuilder:validation:Optional
	awsServiceName?: null | string @go(AwsServiceName,*string)

	// Additional string appended to the role name. Not all AWS services support custom suffixes.
	// +kubebuilder:validation:Optional
	customSuffix?: null | string @go(CustomSuffix,*string)

	// The description of the role.
	// +kubebuilder:validation:Optional
	description?: null | string @go(Description,*string)

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	tags?: {[string]: null | string} @go(Tags,map[string]*string)
}

// ServiceLinkedRoleSpec defines the desired state of ServiceLinkedRole
#ServiceLinkedRoleSpec: {
	v1.#ResourceSpec
	forProvider: #ServiceLinkedRoleParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #ServiceLinkedRoleInitParameters @go(InitProvider)
}

// ServiceLinkedRoleStatus defines the observed state of ServiceLinkedRole.
#ServiceLinkedRoleStatus: {
	v1.#ResourceStatus
	atProvider?: #ServiceLinkedRoleObservation @go(AtProvider)
}

// ServiceLinkedRole is the Schema for the ServiceLinkedRoles API. Provides an IAM service-linked role.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#ServiceLinkedRole: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.awsServiceName) || (has(self.initProvider) && has(self.initProvider.awsServiceName))",message="spec.forProvider.awsServiceName is a required parameter"
	spec:    #ServiceLinkedRoleSpec   @go(Spec)
	status?: #ServiceLinkedRoleStatus @go(Status)
}

// ServiceLinkedRoleList contains a list of ServiceLinkedRoles
#ServiceLinkedRoleList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ServiceLinkedRole] @go(Items,[]ServiceLinkedRole)
}
