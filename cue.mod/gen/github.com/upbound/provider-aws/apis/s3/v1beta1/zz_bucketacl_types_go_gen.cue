// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AccessControlPolicyGrantInitParameters: {
	// Configuration block for the person being granted permissions. See below.
	grantee?: [...#GranteeInitParameters] @go(Grantee,[]GranteeInitParameters)

	// Logging permissions assigned to the grantee for the bucket.
	permission?: null | string @go(Permission,*string)
}

#AccessControlPolicyGrantObservation: {
	// Configuration block for the person being granted permissions. See below.
	grantee?: [...#GranteeObservation] @go(Grantee,[]GranteeObservation)

	// Logging permissions assigned to the grantee for the bucket.
	permission?: null | string @go(Permission,*string)
}

#AccessControlPolicyGrantParameters: {
	// Configuration block for the person being granted permissions. See below.
	// +kubebuilder:validation:Optional
	grantee?: [...#GranteeParameters] @go(Grantee,[]GranteeParameters)

	// Logging permissions assigned to the grantee for the bucket.
	// +kubebuilder:validation:Optional
	permission?: null | string @go(Permission,*string)
}

#AccessControlPolicyInitParameters: {
	// Set of grant configuration blocks. See below.
	grant?: [...#AccessControlPolicyGrantInitParameters] @go(Grant,[]AccessControlPolicyGrantInitParameters)

	// Configuration block of the bucket owner's display name and ID. See below.
	owner?: [...#OwnerInitParameters] @go(Owner,[]OwnerInitParameters)
}

#AccessControlPolicyObservation: {
	// Set of grant configuration blocks. See below.
	grant?: [...#AccessControlPolicyGrantObservation] @go(Grant,[]AccessControlPolicyGrantObservation)

	// Configuration block of the bucket owner's display name and ID. See below.
	owner?: [...#OwnerObservation] @go(Owner,[]OwnerObservation)
}

#AccessControlPolicyParameters: {
	// Set of grant configuration blocks. See below.
	// +kubebuilder:validation:Optional
	grant?: [...#AccessControlPolicyGrantParameters] @go(Grant,[]AccessControlPolicyGrantParameters)

	// Configuration block of the bucket owner's display name and ID. See below.
	// +kubebuilder:validation:Optional
	owner: [...#OwnerParameters] @go(Owner,[]OwnerParameters)
}

#BucketACLInitParameters: {
	// Canned ACL to apply to the bucket.
	acl?: null | string @go(ACL,*string)

	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	accessControlPolicy?: [...#AccessControlPolicyInitParameters] @go(AccessControlPolicy,[]AccessControlPolicyInitParameters)

	// Name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)
}

#BucketACLObservation: {
	// Canned ACL to apply to the bucket.
	acl?: null | string @go(ACL,*string)

	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	accessControlPolicy?: [...#AccessControlPolicyObservation] @go(AccessControlPolicy,[]AccessControlPolicyObservation)

	// Name of the bucket.
	bucket?: null | string @go(Bucket,*string)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// The bucket, expected_bucket_owner (if configured), and acl (if configured) separated by commas (,).
	id?: null | string @go(ID,*string)
}

#BucketACLParameters: {
	// Canned ACL to apply to the bucket.
	// +kubebuilder:validation:Optional
	acl?: null | string @go(ACL,*string)

	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	// +kubebuilder:validation:Optional
	accessControlPolicy?: [...#AccessControlPolicyParameters] @go(AccessControlPolicy,[]AccessControlPolicyParameters)

	// Name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	// +kubebuilder:validation:Optional
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)
}

#GranteeInitParameters: {
	// Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
	emailAddress?: null | string @go(EmailAddress,*string)

	// ID of the owner.
	id?: null | string @go(ID,*string)

	// Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
	type?: null | string @go(Type,*string)

	// URI of the grantee group.
	uri?: null | string @go(URI,*string)
}

#GranteeObservation: {
	// Display name of the owner.
	displayName?: null | string @go(DisplayName,*string)

	// Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
	emailAddress?: null | string @go(EmailAddress,*string)

	// ID of the owner.
	id?: null | string @go(ID,*string)

	// Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
	type?: null | string @go(Type,*string)

	// URI of the grantee group.
	uri?: null | string @go(URI,*string)
}

#GranteeParameters: {
	// Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified.
	// +kubebuilder:validation:Optional
	emailAddress?: null | string @go(EmailAddress,*string)

	// ID of the owner.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)

	// Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group.
	// +kubebuilder:validation:Optional
	type?: null | string @go(Type,*string)

	// URI of the grantee group.
	// +kubebuilder:validation:Optional
	uri?: null | string @go(URI,*string)
}

#OwnerInitParameters: {
	// Display name of the owner.
	displayName?: null | string @go(DisplayName,*string)

	// ID of the owner.
	id?: null | string @go(ID,*string)
}

#OwnerObservation: {
	// Display name of the owner.
	displayName?: null | string @go(DisplayName,*string)

	// ID of the owner.
	id?: null | string @go(ID,*string)
}

#OwnerParameters: {
	// Display name of the owner.
	// +kubebuilder:validation:Optional
	displayName?: null | string @go(DisplayName,*string)

	// ID of the owner.
	// +kubebuilder:validation:Optional
	id?: null | string @go(ID,*string)
}

// BucketACLSpec defines the desired state of BucketACL
#BucketACLSpec: {
	v1.#ResourceSpec
	forProvider: #BucketACLParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BucketACLInitParameters @go(InitProvider)
}

// BucketACLStatus defines the observed state of BucketACL.
#BucketACLStatus: {
	v1.#ResourceStatus
	atProvider?: #BucketACLObservation @go(AtProvider)
}

// BucketACL is the Schema for the BucketACLs API. Provides an S3 bucket ACL resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketACL: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #BucketACLSpec     @go(Spec)
	status?:   #BucketACLStatus   @go(Status)
}

// BucketACLList contains a list of BucketACLs
#BucketACLList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#BucketACL] @go(Items,[]BucketACL)
}
