// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#BucketObjectLockConfigurationInitParameters: {
	// Name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Indicates whether this bucket has an Object Lock configuration enabled. Defaults to Enabled. Valid values: Enabled.
	objectLockEnabled?: null | string @go(ObjectLockEnabled,*string)

	// Configuration block for specifying the Object Lock rule for the specified object. See below.
	rule?: [...#BucketObjectLockConfigurationRuleInitParameters] @go(Rule,[]BucketObjectLockConfigurationRuleInitParameters)
}

#BucketObjectLockConfigurationObservation: {
	// Name of the bucket.
	bucket?: null | string @go(Bucket,*string)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.
	id?: null | string @go(ID,*string)

	// Indicates whether this bucket has an Object Lock configuration enabled. Defaults to Enabled. Valid values: Enabled.
	objectLockEnabled?: null | string @go(ObjectLockEnabled,*string)

	// Configuration block for specifying the Object Lock rule for the specified object. See below.
	rule?: [...#BucketObjectLockConfigurationRuleObservation] @go(Rule,[]BucketObjectLockConfigurationRuleObservation)
}

#BucketObjectLockConfigurationParameters: {
	// Name of the bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	// +kubebuilder:validation:Optional
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Indicates whether this bucket has an Object Lock configuration enabled. Defaults to Enabled. Valid values: Enabled.
	// +kubebuilder:validation:Optional
	objectLockEnabled?: null | string @go(ObjectLockEnabled,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block for specifying the Object Lock rule for the specified object. See below.
	// +kubebuilder:validation:Optional
	rule?: [...#BucketObjectLockConfigurationRuleParameters] @go(Rule,[]BucketObjectLockConfigurationRuleParameters)

	// Token to allow Object Lock to be enabled for an existing bucket. You must contact AWS support for the bucket's "Object Lock token".
	// The token is generated in the back-end when versioning is enabled on a bucket. For more details on versioning, see the aws_s3_bucket_versioning resource.
	// +kubebuilder:validation:Optional
	tokenSecretRef?: null | v1.#SecretKeySelector @go(TokenSecretRef,*v1.SecretKeySelector)
}

#BucketObjectLockConfigurationRuleInitParameters: {
	// Configuration block for specifying the default Object Lock retention settings for new objects placed in the specified bucket. See below.
	defaultRetention?: [...#RuleDefaultRetentionInitParameters] @go(DefaultRetention,[]RuleDefaultRetentionInitParameters)
}

#BucketObjectLockConfigurationRuleObservation: {
	// Configuration block for specifying the default Object Lock retention settings for new objects placed in the specified bucket. See below.
	defaultRetention?: [...#RuleDefaultRetentionObservation] @go(DefaultRetention,[]RuleDefaultRetentionObservation)
}

#BucketObjectLockConfigurationRuleParameters: {
	// Configuration block for specifying the default Object Lock retention settings for new objects placed in the specified bucket. See below.
	// +kubebuilder:validation:Optional
	defaultRetention: [...#RuleDefaultRetentionParameters] @go(DefaultRetention,[]RuleDefaultRetentionParameters)
}

#RuleDefaultRetentionInitParameters: {
	// Number of days that you want to specify for the default retention period.
	days?: null | float64 @go(Days,*float64)

	// Default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Valid values: COMPLIANCE, GOVERNANCE.
	mode?: null | string @go(Mode,*string)

	// Number of years that you want to specify for the default retention period.
	years?: null | float64 @go(Years,*float64)
}

#RuleDefaultRetentionObservation: {
	// Number of days that you want to specify for the default retention period.
	days?: null | float64 @go(Days,*float64)

	// Default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Valid values: COMPLIANCE, GOVERNANCE.
	mode?: null | string @go(Mode,*string)

	// Number of years that you want to specify for the default retention period.
	years?: null | float64 @go(Years,*float64)
}

#RuleDefaultRetentionParameters: {
	// Number of days that you want to specify for the default retention period.
	// +kubebuilder:validation:Optional
	days?: null | float64 @go(Days,*float64)

	// Default Object Lock retention mode you want to apply to new objects placed in the specified bucket. Valid values: COMPLIANCE, GOVERNANCE.
	// +kubebuilder:validation:Optional
	mode?: null | string @go(Mode,*string)

	// Number of years that you want to specify for the default retention period.
	// +kubebuilder:validation:Optional
	years?: null | float64 @go(Years,*float64)
}

// BucketObjectLockConfigurationSpec defines the desired state of BucketObjectLockConfiguration
#BucketObjectLockConfigurationSpec: {
	v1.#ResourceSpec
	forProvider: #BucketObjectLockConfigurationParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BucketObjectLockConfigurationInitParameters @go(InitProvider)
}

// BucketObjectLockConfigurationStatus defines the observed state of BucketObjectLockConfiguration.
#BucketObjectLockConfigurationStatus: {
	v1.#ResourceStatus
	atProvider?: #BucketObjectLockConfigurationObservation @go(AtProvider)
}

// BucketObjectLockConfiguration is the Schema for the BucketObjectLockConfigurations API. Provides an S3 bucket Object Lock configuration resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketObjectLockConfiguration: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta                   @go(ObjectMeta)
	spec:      #BucketObjectLockConfigurationSpec   @go(Spec)
	status?:   #BucketObjectLockConfigurationStatus @go(Status)
}

// BucketObjectLockConfigurationList contains a list of BucketObjectLockConfigurations
#BucketObjectLockConfigurationList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#BucketObjectLockConfiguration] @go(Items,[]BucketObjectLockConfiguration)
}
