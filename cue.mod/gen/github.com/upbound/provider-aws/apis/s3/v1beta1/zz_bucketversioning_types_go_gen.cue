// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-aws/apis/s3/v1beta1

package v1beta1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#BucketVersioningInitParameters: {
	// Name of the S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	mfa?: null | string @go(Mfa,*string)

	// Configuration block for the versioning parameters. See below.
	versioningConfiguration?: [...#VersioningConfigurationInitParameters] @go(VersioningConfiguration,[]VersioningConfigurationInitParameters)
}

#BucketVersioningObservation: {
	// Name of the S3 bucket.
	bucket?: null | string @go(Bucket,*string)

	// Account ID of the expected bucket owner.
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// The bucket or bucket and expected_bucket_owner separated by a comma (,) if the latter is provided.
	id?: null | string @go(ID,*string)

	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	mfa?: null | string @go(Mfa,*string)

	// Configuration block for the versioning parameters. See below.
	versioningConfiguration?: [...#VersioningConfigurationObservation] @go(VersioningConfiguration,[]VersioningConfigurationObservation)
}

#BucketVersioningParameters: {
	// Name of the S3 bucket.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/s3/v1beta1.Bucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	bucket?: null | string @go(Bucket,*string)

	// Reference to a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketRef?: null | v1.#Reference @go(BucketRef,*v1.Reference)

	// Selector for a Bucket in s3 to populate bucket.
	// +kubebuilder:validation:Optional
	bucketSelector?: null | v1.#Selector @go(BucketSelector,*v1.Selector)

	// Account ID of the expected bucket owner.
	// +kubebuilder:validation:Optional
	expectedBucketOwner?: null | string @go(ExpectedBucketOwner,*string)

	// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
	// +kubebuilder:validation:Optional
	mfa?: null | string @go(Mfa,*string)

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	region?: null | string @go(Region,*string)

	// Configuration block for the versioning parameters. See below.
	// +kubebuilder:validation:Optional
	versioningConfiguration?: [...#VersioningConfigurationParameters] @go(VersioningConfiguration,[]VersioningConfigurationParameters)
}

#VersioningConfigurationInitParameters: {
	// Specifies whether MFA delete is enabled in the bucket versioning configuration. Valid values: Enabled or Disabled.
	mfaDelete?: null | string @go(MfaDelete,*string)

	// Versioning state of the bucket. Valid values: Enabled, Suspended, or Disabled. Disabled should only be used when creating or importing resources that correspond to unversioned S3 buckets.
	status?: null | string @go(Status,*string)
}

#VersioningConfigurationObservation: {
	// Specifies whether MFA delete is enabled in the bucket versioning configuration. Valid values: Enabled or Disabled.
	mfaDelete?: null | string @go(MfaDelete,*string)

	// Versioning state of the bucket. Valid values: Enabled, Suspended, or Disabled. Disabled should only be used when creating or importing resources that correspond to unversioned S3 buckets.
	status?: null | string @go(Status,*string)
}

#VersioningConfigurationParameters: {
	// Specifies whether MFA delete is enabled in the bucket versioning configuration. Valid values: Enabled or Disabled.
	// +kubebuilder:validation:Optional
	mfaDelete?: null | string @go(MfaDelete,*string)

	// Versioning state of the bucket. Valid values: Enabled, Suspended, or Disabled. Disabled should only be used when creating or importing resources that correspond to unversioned S3 buckets.
	// +kubebuilder:validation:Optional
	status?: null | string @go(Status,*string)
}

// BucketVersioningSpec defines the desired state of BucketVersioning
#BucketVersioningSpec: {
	v1.#ResourceSpec
	forProvider: #BucketVersioningParameters @go(ForProvider)

	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #BucketVersioningInitParameters @go(InitProvider)
}

// BucketVersioningStatus defines the observed state of BucketVersioning.
#BucketVersioningStatus: {
	v1.#ResourceStatus
	atProvider?: #BucketVersioningObservation @go(AtProvider)
}

// BucketVersioning is the Schema for the BucketVersionings API. Provides an S3 bucket versioning resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
#BucketVersioning: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.versioningConfiguration) || (has(self.initProvider) && has(self.initProvider.versioningConfiguration))",message="spec.forProvider.versioningConfiguration is a required parameter"
	spec:    #BucketVersioningSpec   @go(Spec)
	status?: #BucketVersioningStatus @go(Status)
}

// BucketVersioningList contains a list of BucketVersionings
#BucketVersioningList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#BucketVersioning] @go(Items,[]BucketVersioning)
}
