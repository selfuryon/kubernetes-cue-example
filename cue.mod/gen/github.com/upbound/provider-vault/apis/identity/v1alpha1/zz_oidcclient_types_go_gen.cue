// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-vault/apis/identity/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#OidcClientInitParameters: {
	// The time-to-live for access tokens obtained by the client.
	// The time-to-live for access tokens obtained by the client.
	accessTokenTtl?: null | float64 @go(AccessTokenTTL,*float64)

	// A list of assignment resources associated with the client.
	// A list of assignment resources associated with the client.
	assignments?: [...null | string] @go(Assignments,[]*string)

	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: confidential, public. Defaults to confidential.
	// The client type based on its ability to maintain confidentiality of credentials.Defaults to 'confidential'.
	clientType?: null | string @go(ClientType,*string)

	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the verification_ttl on the key.
	// The time-to-live for ID tokens obtained by the client. The value should be less than the verification_ttl on the key.
	idTokenTtl?: null | float64 @go(IDTokenTTL,*float64)

	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the default
	// key is used.
	// A reference to a named key resource in Vault. This cannot be modified after creation.
	key?: null | string @go(Key,*string)

	// The name of the client.
	// The name of the client.
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Redirection URI values used by the client.
	// One of these values must exactly match the redirect_uri parameter value
	// used in each authentication request.
	// Redirection URI values used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	redirectUris?: [...null | string] @go(RedirectUris,[]*string)
}

#OidcClientObservation: {
	// The time-to-live for access tokens obtained by the client.
	// The time-to-live for access tokens obtained by the client.
	accessTokenTtl?: null | float64 @go(AccessTokenTTL,*float64)

	// A list of assignment resources associated with the client.
	// A list of assignment resources associated with the client.
	assignments?: [...null | string] @go(Assignments,[]*string)

	// The Client ID from Vault.
	clientId?: null | string @go(ClientID,*string)

	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: confidential, public. Defaults to confidential.
	// The client type based on its ability to maintain confidentiality of credentials.Defaults to 'confidential'.
	clientType?: null | string @go(ClientType,*string)
	id?:         null | string @go(ID,*string)

	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the verification_ttl on the key.
	// The time-to-live for ID tokens obtained by the client. The value should be less than the verification_ttl on the key.
	idTokenTtl?: null | float64 @go(IDTokenTTL,*float64)

	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the default
	// key is used.
	// A reference to a named key resource in Vault. This cannot be modified after creation.
	key?: null | string @go(Key,*string)

	// The name of the client.
	// The name of the client.
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Redirection URI values used by the client.
	// One of these values must exactly match the redirect_uri parameter value
	// used in each authentication request.
	// Redirection URI values used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	redirectUris?: [...null | string] @go(RedirectUris,[]*string)
}

#OidcClientParameters: {
	// The time-to-live for access tokens obtained by the client.
	// The time-to-live for access tokens obtained by the client.
	// +kubebuilder:validation:Optional
	accessTokenTtl?: null | float64 @go(AccessTokenTTL,*float64)

	// A list of assignment resources associated with the client.
	// A list of assignment resources associated with the client.
	// +kubebuilder:validation:Optional
	assignments?: [...null | string] @go(Assignments,[]*string)

	// The client type based on its ability to maintain confidentiality of credentials.
	// The following client types are supported: confidential, public. Defaults to confidential.
	// The client type based on its ability to maintain confidentiality of credentials.Defaults to 'confidential'.
	// +kubebuilder:validation:Optional
	clientType?: null | string @go(ClientType,*string)

	// The time-to-live for ID tokens obtained by the client.
	// The value should be less than the verification_ttl on the key.
	// The time-to-live for ID tokens obtained by the client. The value should be less than the verification_ttl on the key.
	// +kubebuilder:validation:Optional
	idTokenTtl?: null | float64 @go(IDTokenTTL,*float64)

	// A reference to a named key resource in Vault.
	// This cannot be modified after creation. If not provided, the default
	// key is used.
	// A reference to a named key resource in Vault. This cannot be modified after creation.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// The name of the client.
	// The name of the client.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)

	// Redirection URI values used by the client.
	// One of these values must exactly match the redirect_uri parameter value
	// used in each authentication request.
	// Redirection URI values used by the client. One of these values must exactly match the redirect_uri parameter value used in each authentication request.
	// +kubebuilder:validation:Optional
	redirectUris?: [...null | string] @go(RedirectUris,[]*string)
}

// OidcClientSpec defines the desired state of OidcClient
#OidcClientSpec: {
	v1.#ResourceSpec
	forProvider: #OidcClientParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OidcClientInitParameters @go(InitProvider)
}

// OidcClientStatus defines the observed state of OidcClient.
#OidcClientStatus: {
	v1.#ResourceStatus
	atProvider?: #OidcClientObservation @go(AtProvider)
}

// OidcClient is the Schema for the OidcClients API. Provision OIDC Clients in Vault.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
#OidcClient: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	spec:    #OidcClientSpec   @go(Spec)
	status?: #OidcClientStatus @go(Status)
}

// OidcClientList contains a list of OidcClients
#OidcClientList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#OidcClient] @go(Items,[]OidcClient)
}
