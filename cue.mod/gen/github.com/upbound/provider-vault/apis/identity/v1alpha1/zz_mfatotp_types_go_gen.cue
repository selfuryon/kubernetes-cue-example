// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-vault/apis/identity/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#MfaTotpInitParameters: {
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	algorithm?: null | string @go(Algorithm,*string)

	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	digits?: null | float64 @go(Digits,*float64)

	// The name of the key's issuing organization.
	// The name of the key's issuing organization.
	issuer?: null | string @go(Issuer,*string)

	// Specifies the size in bytes of the generated key.
	// Specifies the size in bytes of the generated key.
	keySize?: null | float64 @go(KeySize,*float64)

	// The maximum number of consecutive failed validation attempts allowed.
	// The maximum number of consecutive failed validation attempts allowed.
	maxValidationAttempts?: null | float64 @go(MaxValidationAttempts,*float64)

	// Target namespace. (requires Enterprise)
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	period?: null | float64 @go(Period,*float64)

	// The pixel size of the generated square QR code.
	// The pixel size of the generated square QR code.
	qrSize?: null | float64 @go(QrSize,*float64)

	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	skew?: null | float64 @go(Skew,*float64)
}

#MfaTotpObservation: {
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	algorithm?: null | string @go(Algorithm,*string)

	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	digits?: null | float64 @go(Digits,*float64)
	id?:     null | string  @go(ID,*string)

	// The name of the key's issuing organization.
	// The name of the key's issuing organization.
	issuer?: null | string @go(Issuer,*string)

	// Specifies the size in bytes of the generated key.
	// Specifies the size in bytes of the generated key.
	keySize?: null | float64 @go(KeySize,*float64)

	// The maximum number of consecutive failed validation attempts allowed.
	// The maximum number of consecutive failed validation attempts allowed.
	maxValidationAttempts?: null | float64 @go(MaxValidationAttempts,*float64)

	// Method ID.
	// Method ID.
	methodId?: null | string @go(MethodID,*string)

	// Mount accessor.
	// Mount accessor.
	mountAccessor?: null | string @go(MountAccessor,*string)

	// Method name.
	name?: null | string @go(Name,*string)

	// Target namespace. (requires Enterprise)
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Method's namespace ID.
	// Method's namespace ID.
	namespaceId?: null | string @go(NamespaceID,*string)

	// Method's namespace path.
	// Method's namespace path.
	namespacePath?: null | string @go(NamespacePath,*string)

	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	period?: null | float64 @go(Period,*float64)

	// The pixel size of the generated square QR code.
	// The pixel size of the generated square QR code.
	qrSize?: null | float64 @go(QrSize,*float64)

	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	skew?: null | float64 @go(Skew,*float64)

	// MFA type.
	// MFA type.
	type?: null | string @go(Type,*string)

	// Resource UUID.
	// Resource UUID.
	uuid?: null | string @go(UUID,*string)
}

#MfaTotpParameters: {
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	// Specifies the hashing algorithm used to generate the TOTP code. Options include SHA1, SHA256, SHA512.
	// +kubebuilder:validation:Optional
	algorithm?: null | string @go(Algorithm,*string)

	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	// The number of digits in the generated TOTP token. This value can either be 6 or 8
	// +kubebuilder:validation:Optional
	digits?: null | float64 @go(Digits,*float64)

	// The name of the key's issuing organization.
	// The name of the key's issuing organization.
	// +kubebuilder:validation:Optional
	issuer?: null | string @go(Issuer,*string)

	// Specifies the size in bytes of the generated key.
	// Specifies the size in bytes of the generated key.
	// +kubebuilder:validation:Optional
	keySize?: null | float64 @go(KeySize,*float64)

	// The maximum number of consecutive failed validation attempts allowed.
	// The maximum number of consecutive failed validation attempts allowed.
	// +kubebuilder:validation:Optional
	maxValidationAttempts?: null | float64 @go(MaxValidationAttempts,*float64)

	// Target namespace. (requires Enterprise)
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)

	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	// The length of time in seconds used to generate a counter for the TOTP token calculation.
	// +kubebuilder:validation:Optional
	period?: null | float64 @go(Period,*float64)

	// The pixel size of the generated square QR code.
	// The pixel size of the generated square QR code.
	// +kubebuilder:validation:Optional
	qrSize?: null | float64 @go(QrSize,*float64)

	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	// The number of delay periods that are allowed when validating a TOTP token. This value can either be 0 or 1.
	// +kubebuilder:validation:Optional
	skew?: null | float64 @go(Skew,*float64)
}

// MfaTotpSpec defines the desired state of MfaTotp
#MfaTotpSpec: {
	v1.#ResourceSpec
	forProvider: #MfaTotpParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #MfaTotpInitParameters @go(InitProvider)
}

// MfaTotpStatus defines the observed state of MfaTotp.
#MfaTotpStatus: {
	v1.#ResourceStatus
	atProvider?: #MfaTotpObservation @go(AtProvider)
}

// MfaTotp is the Schema for the MfaTotps API. Resource for configuring the totp MFA method.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
#MfaTotp: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.issuer) || has(self.initProvider.issuer)",message="issuer is a required parameter"
	spec:    #MfaTotpSpec   @go(Spec)
	status?: #MfaTotpStatus @go(Status)
}

// MfaTotpList contains a list of MfaTotps
#MfaTotpList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#MfaTotp] @go(Items,[]MfaTotp)
}
