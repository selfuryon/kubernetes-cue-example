// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-vault/apis/identity/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#OidcRoleInitParameters: {
	// The value that will be included in the aud field of all the OIDC identity
	// tokens issued by this role
	// The value that will be included in the `aud` field of all the OIDC identity tokens issued by this role
	clientId?: null | string @go(ClientID,*string)

	// A configured named key, the key must already exist
	// before tokens can be issued.
	// A configured named key, the key must already exist.
	key?: null | string @go(Key,*string)

	// Name of the OIDC Role to create.
	// Name of the role.
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// TTL of the tokens generated against the role in number of seconds.
	// TTL of the tokens generated against the role in number of seconds.
	ttl?: null | float64 @go(TTL,*float64)

	// The template string to use for generating tokens. This may be in
	// string-ified JSON or base64 format. See the
	// documentation
	// for the template format.
	// The template string to use for generating tokens. This may be in string-ified JSON or base64 format.
	template?: null | string @go(Template,*string)
}

#OidcRoleObservation: {
	// The value that will be included in the aud field of all the OIDC identity
	// tokens issued by this role
	// The value that will be included in the `aud` field of all the OIDC identity tokens issued by this role
	clientId?: null | string @go(ClientID,*string)

	// The name of the created role.
	id?: null | string @go(ID,*string)

	// A configured named key, the key must already exist
	// before tokens can be issued.
	// A configured named key, the key must already exist.
	key?: null | string @go(Key,*string)

	// Name of the OIDC Role to create.
	// Name of the role.
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// TTL of the tokens generated against the role in number of seconds.
	// TTL of the tokens generated against the role in number of seconds.
	ttl?: null | float64 @go(TTL,*float64)

	// The template string to use for generating tokens. This may be in
	// string-ified JSON or base64 format. See the
	// documentation
	// for the template format.
	// The template string to use for generating tokens. This may be in string-ified JSON or base64 format.
	template?: null | string @go(Template,*string)
}

#OidcRoleParameters: {
	// The value that will be included in the aud field of all the OIDC identity
	// tokens issued by this role
	// The value that will be included in the `aud` field of all the OIDC identity tokens issued by this role
	// +kubebuilder:validation:Optional
	clientId?: null | string @go(ClientID,*string)

	// A configured named key, the key must already exist
	// before tokens can be issued.
	// A configured named key, the key must already exist.
	// +kubebuilder:validation:Optional
	key?: null | string @go(Key,*string)

	// Name of the OIDC Role to create.
	// Name of the role.
	// +kubebuilder:validation:Optional
	name?: null | string @go(Name,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)

	// TTL of the tokens generated against the role in number of seconds.
	// TTL of the tokens generated against the role in number of seconds.
	// +kubebuilder:validation:Optional
	ttl?: null | float64 @go(TTL,*float64)

	// The template string to use for generating tokens. This may be in
	// string-ified JSON or base64 format. See the
	// documentation
	// for the template format.
	// The template string to use for generating tokens. This may be in string-ified JSON or base64 format.
	// +kubebuilder:validation:Optional
	template?: null | string @go(Template,*string)
}

// OidcRoleSpec defines the desired state of OidcRole
#OidcRoleSpec: {
	v1.#ResourceSpec
	forProvider: #OidcRoleParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #OidcRoleInitParameters @go(InitProvider)
}

// OidcRoleStatus defines the observed state of OidcRole.
#OidcRoleStatus: {
	v1.#ResourceStatus
	atProvider?: #OidcRoleObservation @go(AtProvider)
}

// OidcRole is the Schema for the OidcRoles API. Creates an Identity OIDC Role for Vault
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
#OidcRole: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.key) || has(self.initProvider.key)",message="key is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	spec:    #OidcRoleSpec   @go(Spec)
	status?: #OidcRoleStatus @go(Status)
}

// OidcRoleList contains a list of OidcRoles
#OidcRoleList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#OidcRole] @go(Items,[]OidcRole)
}
