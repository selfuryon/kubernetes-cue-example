// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-vault/apis/gcp/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#SecretStaticAccountBindingInitParameters: {
	// Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different formats.
	// Resource name
	resource?: null | string @go(Resource,*string)

	// List of GCP IAM roles for the resource.
	// List of roles to apply to the resource
	roles?: [...null | string] @go(Roles,[]*string)
}

#SecretStaticAccountBindingObservation: {
	// Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different formats.
	// Resource name
	resource?: null | string @go(Resource,*string)

	// List of GCP IAM roles for the resource.
	// List of roles to apply to the resource
	roles?: [...null | string] @go(Roles,[]*string)
}

#SecretStaticAccountBindingParameters: {
	// Resource or resource path for which IAM policy information will be bound. The resource path may be specified in a few different formats.
	// Resource name
	// +kubebuilder:validation:Optional
	resource?: null | string @go(Resource,*string)

	// List of GCP IAM roles for the resource.
	// List of roles to apply to the resource
	// +kubebuilder:validation:Optional
	roles?: [...null | string] @go(Roles,[]*string)
}

#SecretStaticAccountInitParameters: {
	// Path where the GCP Secrets Engine is mounted
	// Path where the GCP secrets engine is mounted.
	backend?: null | string @go(Backend,*string)

	// Bindings to create for this static account. This can be specified multiple times for multiple bindings. Structure is documented below.
	binding?: [...#SecretStaticAccountBindingInitParameters] @go(Binding,[]SecretStaticAccountBindingInitParameters)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Type of secret generated for this static account. Accepted values: access_token, service_account_key. Defaults to access_token.
	// Type of secret generated for this static account. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`
	secretType?: null | string @go(SecretType,*string)

	// Email of the GCP service account to manage.
	// Email of the GCP service account.
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// Name of the Static Account to create
	// Name of the Static Account to create
	staticAccount?: null | string @go(StaticAccount,*string)

	// List of OAuth scopes to assign to access_token secrets generated under this static account (access_token static accounts only).
	// List of OAuth scopes to assign to `access_token` secrets generated under this static account (`access_token` static accounts only)
	tokenScopes?: [...null | string] @go(TokenScopes,[]*string)
}

#SecretStaticAccountObservation: {
	// Path where the GCP Secrets Engine is mounted
	// Path where the GCP secrets engine is mounted.
	backend?: null | string @go(Backend,*string)

	// Bindings to create for this static account. This can be specified multiple times for multiple bindings. Structure is documented below.
	binding?: [...#SecretStaticAccountBindingObservation] @go(Binding,[]SecretStaticAccountBindingObservation)
	id?: null | string @go(ID,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Type of secret generated for this static account. Accepted values: access_token, service_account_key. Defaults to access_token.
	// Type of secret generated for this static account. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`
	secretType?: null | string @go(SecretType,*string)

	// Email of the GCP service account to manage.
	// Email of the GCP service account.
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// Project the service account belongs to.
	// Project of the GCP Service Account managed by this static account
	serviceAccountProject?: null | string @go(ServiceAccountProject,*string)

	// Name of the Static Account to create
	// Name of the Static Account to create
	staticAccount?: null | string @go(StaticAccount,*string)

	// List of OAuth scopes to assign to access_token secrets generated under this static account (access_token static accounts only).
	// List of OAuth scopes to assign to `access_token` secrets generated under this static account (`access_token` static accounts only)
	tokenScopes?: [...null | string] @go(TokenScopes,[]*string)
}

#SecretStaticAccountParameters: {
	// Path where the GCP Secrets Engine is mounted
	// Path where the GCP secrets engine is mounted.
	// +kubebuilder:validation:Optional
	backend?: null | string @go(Backend,*string)

	// Bindings to create for this static account. This can be specified multiple times for multiple bindings. Structure is documented below.
	// +kubebuilder:validation:Optional
	binding?: [...#SecretStaticAccountBindingParameters] @go(Binding,[]SecretStaticAccountBindingParameters)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)

	// Type of secret generated for this static account. Accepted values: access_token, service_account_key. Defaults to access_token.
	// Type of secret generated for this static account. Defaults to `access_token`. Accepted values: `access_token`, `service_account_key`
	// +kubebuilder:validation:Optional
	secretType?: null | string @go(SecretType,*string)

	// Email of the GCP service account to manage.
	// Email of the GCP service account.
	// +kubebuilder:validation:Optional
	serviceAccountEmail?: null | string @go(ServiceAccountEmail,*string)

	// Name of the Static Account to create
	// Name of the Static Account to create
	// +kubebuilder:validation:Optional
	staticAccount?: null | string @go(StaticAccount,*string)

	// List of OAuth scopes to assign to access_token secrets generated under this static account (access_token static accounts only).
	// List of OAuth scopes to assign to `access_token` secrets generated under this static account (`access_token` static accounts only)
	// +kubebuilder:validation:Optional
	tokenScopes?: [...null | string] @go(TokenScopes,[]*string)
}

// SecretStaticAccountSpec defines the desired state of SecretStaticAccount
#SecretStaticAccountSpec: {
	v1.#ResourceSpec
	forProvider: #SecretStaticAccountParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #SecretStaticAccountInitParameters @go(InitProvider)
}

// SecretStaticAccountStatus defines the observed state of SecretStaticAccount.
#SecretStaticAccountStatus: {
	v1.#ResourceStatus
	atProvider?: #SecretStaticAccountObservation @go(AtProvider)
}

// SecretStaticAccount is the Schema for the SecretStaticAccounts API. Creates a Static Account for the GCP Secret Backend for Vault.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
#SecretStaticAccount: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)

	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backend) || has(self.initProvider.backend)",message="backend is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceAccountEmail) || has(self.initProvider.serviceAccountEmail)",message="serviceAccountEmail is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.staticAccount) || has(self.initProvider.staticAccount)",message="staticAccount is a required parameter"
	spec:    #SecretStaticAccountSpec   @go(Spec)
	status?: #SecretStaticAccountStatus @go(Status)
}

// SecretStaticAccountList contains a list of SecretStaticAccounts
#SecretStaticAccountList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#SecretStaticAccount] @go(Items,[]SecretStaticAccount)
}
