// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/upbound/provider-vault/apis/aws/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#AuthBackendClientInitParameters: {
	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	backend?: null | string @go(Backend,*string)

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	ec2Endpoint?: null | string @go(EC2Endpoint,*string)

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	iamEndpoint?: null | string @go(IAMEndpoint,*string)

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	iamServerIdHeaderValue?: null | string @go(IAMServerIDHeaderValue,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	stsEndpoint?: null | string @go(StsEndpoint,*string)

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	stsRegion?: null | string @go(StsRegion,*string)
}

#AuthBackendClientObservation: {
	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	backend?: null | string @go(Backend,*string)

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	ec2Endpoint?: null | string @go(EC2Endpoint,*string)

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	iamEndpoint?: null | string @go(IAMEndpoint,*string)

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	iamServerIdHeaderValue?: null | string @go(IAMServerIDHeaderValue,*string)
	id?:                     null | string @go(ID,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	namespace?: null | string @go(Namespace,*string)

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	stsEndpoint?: null | string @go(StsEndpoint,*string)

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	stsRegion?: null | string @go(StsRegion,*string)
}

#AuthBackendClientParameters: {
	// The AWS access key that Vault should use for the
	// auth backend.
	// AWS Access key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	accessKeySecretRef?: null | v1.#SecretKeySelector @go(AccessKeySecretRef,*v1.SecretKeySelector)

	// The path the AWS auth backend being configured was
	// mounted at.  Defaults to aws.
	// Unique name of the auth backend to configure.
	// +kubebuilder:validation:Optional
	backend?: null | string @go(Backend,*string)

	// Override the URL Vault uses when making EC2 API
	// calls.
	// URL to override the default generated endpoint for making AWS EC2 API calls.
	// +kubebuilder:validation:Optional
	ec2Endpoint?: null | string @go(EC2Endpoint,*string)

	// Override the URL Vault uses when making IAM API
	// calls.
	// URL to override the default generated endpoint for making AWS IAM API calls.
	// +kubebuilder:validation:Optional
	iamEndpoint?: null | string @go(IAMEndpoint,*string)

	// The value to require in the
	// X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests
	// that are used in the IAM auth method.
	// The value to require in the X-Vault-AWS-IAM-Server-ID header as part of GetCallerIdentity requests that are used in the iam auth method.
	// +kubebuilder:validation:Optional
	iamServerIdHeaderValue?: null | string @go(IAMServerIDHeaderValue,*string)

	// The namespace to provision the resource in.
	// The value should not contain leading or trailing forward slashes.
	// The namespace is always relative to the provider's configured namespace.
	// Available only for Vault Enterprise.
	// Target namespace. (requires Enterprise)
	// +kubebuilder:validation:Optional
	namespace?: null | string @go(Namespace,*string)

	// The AWS secret key that Vault should use for the
	// auth backend.
	// AWS Secret key with permissions to query AWS APIs.
	// +kubebuilder:validation:Optional
	secretKeySecretRef?: null | v1.#SecretKeySelector @go(SecretKeySecretRef,*v1.SecretKeySelector)

	// Override the URL Vault uses when making STS API
	// calls.
	// URL to override the default generated endpoint for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	stsEndpoint?: null | string @go(StsEndpoint,*string)

	// Override the default region when making STS API
	// calls. The sts_endpoint argument must be set when using sts_region.
	// Region to override the default region for making AWS STS API calls.
	// +kubebuilder:validation:Optional
	stsRegion?: null | string @go(StsRegion,*string)
}

// AuthBackendClientSpec defines the desired state of AuthBackendClient
#AuthBackendClientSpec: {
	v1.#ResourceSpec
	forProvider: #AuthBackendClientParameters @go(ForProvider)

	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	initProvider?: #AuthBackendClientInitParameters @go(InitProvider)
}

// AuthBackendClientStatus defines the observed state of AuthBackendClient.
#AuthBackendClientStatus: {
	v1.#ResourceStatus
	atProvider?: #AuthBackendClientObservation @go(AtProvider)
}

// AuthBackendClient is the Schema for the AuthBackendClients API. Configures the client used by an AWS Auth Backend in Vault.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vault}
#AuthBackendClient: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta       @go(ObjectMeta)
	spec:      #AuthBackendClientSpec   @go(Spec)
	status?:   #AuthBackendClientStatus @go(Status)
}

// AuthBackendClientList contains a list of AuthBackendClients
#AuthBackendClientList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#AuthBackendClient] @go(Items,[]AuthBackendClient)
}
